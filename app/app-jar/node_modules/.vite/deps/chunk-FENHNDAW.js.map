{
  "version": 3,
  "sources": ["../../validator/es/lib/util/assertString.js", "../../validator/es/lib/alpha.js", "../../validator/es/lib/isNumeric.js", "../../validator/es/lib/toDate.js", "../../validator/es/lib/isAfter.js", "../../validator/es/lib/isBefore.js", "../../validator/es/lib/isBoolean.js", "../../validator/es/lib/util/merge.js", "../../validator/es/lib/util/includes.js", "../../validator/es/lib/isDecimal.js", "../../validator/es/lib/isByteLength.js", "../../validator/es/lib/isFQDN.js", "../../validator/es/lib/isIP.js", "../../validator/es/lib/isEmail.js", "../../validator/es/lib/isFloat.js", "../../validator/es/lib/isLength.js", "../../validator/es/lib/matches.js", "../../validator/es/lib/toFloat.js", "../../@vaadin/hilla-lit-form/src/Validators.ts", "../../@vaadin/hilla-lit-form/src/Models.ts", "../../@vaadin/hilla-lit-form/src/Validity.ts", "../../@vaadin/hilla-lit-form/src/BinderNode.ts", "../../@vaadin/hilla-lit-form/src/Field.ts", "../../@vaadin/hilla-lit-form/src/Validation.ts", "../../@vaadin/hilla-lit-form/src/BinderRoot.ts", "../../@vaadin/hilla-lit-form/src/Binder.ts", "../../../scripts/register.js", "../../@vaadin/hilla-lit-form/src/index.ts"],
  "sourcesContent": ["function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nexport default function assertString(input) {\n  var isString = typeof input === 'string' || input instanceof String;\n  if (!isString) {\n    var invalidType = _typeof(input);\n    if (input === null) invalidType = 'null';else if (invalidType === 'object') invalidType = input.constructor.name;\n    throw new TypeError(\"Expected a string but received a \".concat(invalidType));\n  }\n}", "export var alpha = {\n  'en-US': /^[A-Z]+$/i,\n  'az-AZ': /^[A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[А-Я]+$/i,\n  'cs-CZ': /^[A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[A-ZÆØÅ]+$/i,\n  'de-DE': /^[A-ZÄÖÜß]+$/i,\n  'el-GR': /^[Α-ώ]+$/i,\n  'es-ES': /^[A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fa-IR': /^[ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی]+$/i,\n  'fi-FI': /^[A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'nb-NO': /^[A-ZÆØÅ]+$/i,\n  'nl-NL': /^[A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[A-ZÆØÅ]+$/i,\n  'hu-HU': /^[A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'pl-PL': /^[A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[А-ЯЁ]+$/i,\n  'kk-KZ': /^[А-ЯЁ\\u04D8\\u04B0\\u0406\\u04A2\\u0492\\u04AE\\u049A\\u04E8\\u04BA]+$/i,\n  'sl-SI': /^[A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๐\\s]+$/i,\n  'tr-TR': /^[A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[А-ЩЬЮЯЄIЇҐі]+$/i,\n  'vi-VN': /^[A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  'ko-KR': /^[ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  ar: /^[ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[א-ת]+$/,\n  fa: /^['آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  eo: /^[ABCĈD-GĜHĤIJĴK-PRSŜTUŬVZ]+$/i,\n  'hi-IN': /^[\\u0900-\\u0961]+[\\u0972-\\u097F]*$/i,\n  'si-LK': /^[\\u0D80-\\u0DFF]+$/\n};\nexport var alphanumeric = {\n  'en-US': /^[0-9A-Z]+$/i,\n  'az-AZ': /^[0-9A-VXYZÇƏĞİıÖŞÜ]+$/i,\n  'bg-BG': /^[0-9А-Я]+$/i,\n  'cs-CZ': /^[0-9A-ZÁČĎÉĚÍŇÓŘŠŤÚŮÝŽ]+$/i,\n  'da-DK': /^[0-9A-ZÆØÅ]+$/i,\n  'de-DE': /^[0-9A-ZÄÖÜß]+$/i,\n  'el-GR': /^[0-9Α-ω]+$/i,\n  'es-ES': /^[0-9A-ZÁÉÍÑÓÚÜ]+$/i,\n  'fi-FI': /^[0-9A-ZÅÄÖ]+$/i,\n  'fr-FR': /^[0-9A-ZÀÂÆÇÉÈÊËÏÎÔŒÙÛÜŸ]+$/i,\n  'it-IT': /^[0-9A-ZÀÉÈÌÎÓÒÙ]+$/i,\n  'ja-JP': /^[0-9０-９ぁ-んァ-ヶｦ-ﾟ一-龠ー・。、]+$/i,\n  'hu-HU': /^[0-9A-ZÁÉÍÓÖŐÚÜŰ]+$/i,\n  'nb-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'nl-NL': /^[0-9A-ZÁÉËÏÓÖÜÚ]+$/i,\n  'nn-NO': /^[0-9A-ZÆØÅ]+$/i,\n  'pl-PL': /^[0-9A-ZĄĆĘŚŁŃÓŻŹ]+$/i,\n  'pt-PT': /^[0-9A-ZÃÁÀÂÄÇÉÊËÍÏÕÓÔÖÚÜ]+$/i,\n  'ru-RU': /^[0-9А-ЯЁ]+$/i,\n  'kk-KZ': /^[0-9А-ЯЁ\\u04D8\\u04B0\\u0406\\u04A2\\u0492\\u04AE\\u049A\\u04E8\\u04BA]+$/i,\n  'sl-SI': /^[0-9A-ZČĆĐŠŽ]+$/i,\n  'sk-SK': /^[0-9A-ZÁČĎÉÍŇÓŠŤÚÝŽĹŔĽÄÔ]+$/i,\n  'sr-RS@latin': /^[0-9A-ZČĆŽŠĐ]+$/i,\n  'sr-RS': /^[0-9А-ЯЂЈЉЊЋЏ]+$/i,\n  'sv-SE': /^[0-9A-ZÅÄÖ]+$/i,\n  'th-TH': /^[ก-๙\\s]+$/i,\n  'tr-TR': /^[0-9A-ZÇĞİıÖŞÜ]+$/i,\n  'uk-UA': /^[0-9А-ЩЬЮЯЄIЇҐі]+$/i,\n  'ko-KR': /^[0-9ㄱ-ㅎㅏ-ㅣ가-힣]*$/,\n  'ku-IQ': /^[٠١٢٣٤٥٦٧٨٩0-9ئابپتجچحخدرڕزژسشعغفڤقکگلڵمنوۆھەیێيطؤثآإأكضصةظذ]+$/i,\n  'vi-VN': /^[0-9A-ZÀÁẠẢÃÂẦẤẬẨẪĂẰẮẶẲẴĐÈÉẸẺẼÊỀẾỆỂỄÌÍỊỈĨÒÓỌỎÕÔỒỐỘỔỖƠỜỚỢỞỠÙÚỤỦŨƯỪỨỰỬỮỲÝỴỶỸ]+$/i,\n  ar: /^[٠١٢٣٤٥٦٧٨٩0-9ءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهوىيًٌٍَُِّْٰ]+$/,\n  he: /^[0-9א-ת]+$/,\n  fa: /^['0-9آاءأؤئبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهةی۱۲۳۴۵۶۷۸۹۰']+$/i,\n  bn: /^['ঀঁংঃঅআইঈউঊঋঌএঐওঔকখগঘঙচছজঝঞটঠডঢণতথদধনপফবভমযরলশষসহ়ঽািীুূৃৄেৈোৌ্ৎৗড়ঢ়য়ৠৡৢৣ০১২৩৪৫৬৭৮৯ৰৱ৲৳৴৵৶৷৸৹৺৻']+$/,\n  eo: /^[0-9ABCĈD-GĜHĤIJĴK-PRSŜTUŬVZ]+$/i,\n  'hi-IN': /^[\\u0900-\\u0963]+[\\u0966-\\u097F]*$/i,\n  'si-LK': /^[0-9\\u0D80-\\u0DFF]+$/\n};\nexport var decimal = {\n  'en-US': '.',\n  ar: '٫'\n};\nexport var englishLocales = ['AU', 'GB', 'HK', 'IN', 'NZ', 'ZA', 'ZM'];\nfor (var locale, i = 0; i < englishLocales.length; i++) {\n  locale = \"en-\".concat(englishLocales[i]);\n  alpha[locale] = alpha['en-US'];\n  alphanumeric[locale] = alphanumeric['en-US'];\n  decimal[locale] = decimal['en-US'];\n}\n\n// Source: http://www.localeplanet.com/java/\nexport var arabicLocales = ['AE', 'BH', 'DZ', 'EG', 'IQ', 'JO', 'KW', 'LB', 'LY', 'MA', 'QM', 'QA', 'SA', 'SD', 'SY', 'TN', 'YE'];\nfor (var _locale, _i = 0; _i < arabicLocales.length; _i++) {\n  _locale = \"ar-\".concat(arabicLocales[_i]);\n  alpha[_locale] = alpha.ar;\n  alphanumeric[_locale] = alphanumeric.ar;\n  decimal[_locale] = decimal.ar;\n}\nexport var farsiLocales = ['IR', 'AF'];\nfor (var _locale2, _i2 = 0; _i2 < farsiLocales.length; _i2++) {\n  _locale2 = \"fa-\".concat(farsiLocales[_i2]);\n  alphanumeric[_locale2] = alphanumeric.fa;\n  decimal[_locale2] = decimal.ar;\n}\nexport var bengaliLocales = ['BD', 'IN'];\nfor (var _locale3, _i3 = 0; _i3 < bengaliLocales.length; _i3++) {\n  _locale3 = \"bn-\".concat(bengaliLocales[_i3]);\n  alpha[_locale3] = alpha.bn;\n  alphanumeric[_locale3] = alphanumeric.bn;\n  decimal[_locale3] = decimal['en-US'];\n}\n\n// Source: https://en.wikipedia.org/wiki/Decimal_mark\nexport var dotDecimal = ['ar-EG', 'ar-LB', 'ar-LY'];\nexport var commaDecimal = ['bg-BG', 'cs-CZ', 'da-DK', 'de-DE', 'el-GR', 'en-ZM', 'eo', 'es-ES', 'fr-CA', 'fr-FR', 'id-ID', 'it-IT', 'ku-IQ', 'hi-IN', 'hu-HU', 'nb-NO', 'nn-NO', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'kk-KZ', 'si-LK', 'sl-SI', 'sr-RS@latin', 'sr-RS', 'sv-SE', 'tr-TR', 'uk-UA', 'vi-VN'];\nfor (var _i4 = 0; _i4 < dotDecimal.length; _i4++) {\n  decimal[dotDecimal[_i4]] = decimal['en-US'];\n}\nfor (var _i5 = 0; _i5 < commaDecimal.length; _i5++) {\n  decimal[commaDecimal[_i5]] = ',';\n}\nalpha['fr-CA'] = alpha['fr-FR'];\nalphanumeric['fr-CA'] = alphanumeric['fr-FR'];\nalpha['pt-BR'] = alpha['pt-PT'];\nalphanumeric['pt-BR'] = alphanumeric['pt-PT'];\ndecimal['pt-BR'] = decimal['pt-PT'];\n\n// see #862\nalpha['pl-Pl'] = alpha['pl-PL'];\nalphanumeric['pl-Pl'] = alphanumeric['pl-PL'];\ndecimal['pl-Pl'] = decimal['pl-PL'];\n\n// see #1455\nalpha['fa-AF'] = alpha.fa;", "import assertString from './util/assertString';\nimport { decimal } from './alpha';\nvar numericNoSymbols = /^[0-9]+$/;\nexport default function isNumeric(str, options) {\n  assertString(str);\n  if (options && options.no_symbols) {\n    return numericNoSymbols.test(str);\n  }\n  return new RegExp(\"^[+-]?([0-9]*[\".concat((options || {}).locale ? decimal[options.locale] : '.', \"])?[0-9]+$\")).test(str);\n}", "import assertString from './util/assertString';\nexport default function toDate(date) {\n  assertString(date);\n  date = Date.parse(date);\n  return !isNaN(date) ? new Date(date) : null;\n}", "import toDate from './toDate';\nexport default function isAfter(date, options) {\n  // For backwards compatibility:\n  // isAfter(str [, date]), i.e. `options` could be used as argument for the legacy `date`\n  var comparisonDate = (options === null || options === void 0 ? void 0 : options.comparisonDate) || options || Date().toString();\n  var comparison = toDate(comparisonDate);\n  var original = toDate(date);\n  return !!(original && comparison && original > comparison);\n}", "import assertString from './util/assertString';\nimport toDate from './toDate';\nexport default function isBefore(str) {\n  var date = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(new Date());\n  assertString(str);\n  var comparison = toDate(date);\n  var original = toDate(str);\n  return !!(original && comparison && original < comparison);\n}", "import assertString from './util/assertString';\nvar defaultOptions = {\n  loose: false\n};\nvar strictBooleans = ['true', 'false', '1', '0'];\nvar looseBooleans = [].concat(strictBooleans, ['yes', 'no']);\nexport default function isBoolean(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  assertString(str);\n  if (options.loose) {\n    return looseBooleans.includes(str.toLowerCase());\n  }\n  return strictBooleans.includes(str);\n}", "export default function merge() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = arguments.length > 1 ? arguments[1] : undefined;\n  for (var key in defaults) {\n    if (typeof obj[key] === 'undefined') {\n      obj[key] = defaults[key];\n    }\n  }\n  return obj;\n}", "var includes = function includes(arr, val) {\n  return arr.some(function (arrVal) {\n    return val === arrVal;\n  });\n};\nexport default includes;", "import merge from './util/merge';\nimport assertString from './util/assertString';\nimport includes from './util/includes';\nimport { decimal } from './alpha';\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\nexport default function isDecimal(str, options) {\n  assertString(str);\n  options = merge(options, default_decimal_options);\n  if (options.locale in decimal) {\n    return !includes(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}", "function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nimport assertString from './util/assertString';\n\n/* eslint-disable prefer-rest-params */\nexport default function isByteLength(str, options) {\n  assertString(str);\n  var min;\n  var max;\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}", "import assertString from './util/assertString';\nimport merge from './util/merge';\nvar default_fqdn_options = {\n  require_tld: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_numeric_tld: false,\n  allow_wildcard: false,\n  ignore_max_length: false\n};\nexport default function isFQDN(str, options) {\n  assertString(str);\n  options = merge(options, default_fqdn_options);\n\n  /* Remove the optional trailing dot before checking validity */\n  if (options.allow_trailing_dot && str[str.length - 1] === '.') {\n    str = str.substring(0, str.length - 1);\n  }\n\n  /* Remove the optional wildcard before checking validity */\n  if (options.allow_wildcard === true && str.indexOf('*.') === 0) {\n    str = str.substring(2);\n  }\n  var parts = str.split('.');\n  var tld = parts[parts.length - 1];\n  if (options.require_tld) {\n    // disallow fqdns without tld\n    if (parts.length < 2) {\n      return false;\n    }\n    if (!options.allow_numeric_tld && !/^([a-z\\u00A1-\\u00A8\\u00AA-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {\n      return false;\n    }\n\n    // disallow spaces\n    if (/\\s/.test(tld)) {\n      return false;\n    }\n  }\n\n  // reject numeric TLDs\n  if (!options.allow_numeric_tld && /^\\d+$/.test(tld)) {\n    return false;\n  }\n  return parts.every(function (part) {\n    if (part.length > 63 && !options.ignore_max_length) {\n      return false;\n    }\n    if (!/^[a-z_\\u00a1-\\uffff0-9-]+$/i.test(part)) {\n      return false;\n    }\n\n    // disallow full-width chars\n    if (/[\\uff01-\\uff5e]/.test(part)) {\n      return false;\n    }\n\n    // disallow parts starting or ending with hyphen\n    if (/^-|-$/.test(part)) {\n      return false;\n    }\n    if (!options.allow_underscores && /_/.test(part)) {\n      return false;\n    }\n    return true;\n  });\n}", "import assertString from './util/assertString';\n/**\n11.3.  Examples\n\n   The following addresses\n\n             fe80::1234 (on the 1st link of the node)\n             ff02::5678 (on the 5th link of the node)\n             ff08::9abc (on the 10th organization of the node)\n\n   would be represented as follows:\n\n             fe80::1234%1\n             ff02::5678%5\n             ff08::9abc%10\n\n   (Here we assume a natural translation from a zone index to the\n   <zone_id> part, where the Nth zone of any scope is translated into\n   \"N\".)\n\n   If we use interface names as <zone_id>, those addresses could also be\n   represented as follows:\n\n            fe80::1234%ne0\n            ff02::5678%pvc1.3\n            ff08::9abc%interface10\n\n   where the interface \"ne0\" belongs to the 1st link, \"pvc1.3\" belongs\n   to the 5th link, and \"interface10\" belongs to the 10th organization.\n * * */\nvar IPv4SegmentFormat = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nvar IPv4AddressFormat = \"(\".concat(IPv4SegmentFormat, \"[.]){3}\").concat(IPv4SegmentFormat);\nvar IPv4AddressRegExp = new RegExp(\"^\".concat(IPv4AddressFormat, \"$\"));\nvar IPv6SegmentFormat = '(?:[0-9a-fA-F]{1,4})';\nvar IPv6AddressRegExp = new RegExp('^(' + \"(?:\".concat(IPv6SegmentFormat, \":){7}(?:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){6}(?:\").concat(IPv4AddressFormat, \"|:\").concat(IPv6SegmentFormat, \"|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){5}(?::\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,2}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){4}(?:(:\").concat(IPv6SegmentFormat, \"){0,1}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,3}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){3}(?:(:\").concat(IPv6SegmentFormat, \"){0,2}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,4}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){2}(?:(:\").concat(IPv6SegmentFormat, \"){0,3}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,5}|:)|\") + \"(?:\".concat(IPv6SegmentFormat, \":){1}(?:(:\").concat(IPv6SegmentFormat, \"){0,4}:\").concat(IPv4AddressFormat, \"|(:\").concat(IPv6SegmentFormat, \"){1,6}|:)|\") + \"(?::((?::\".concat(IPv6SegmentFormat, \"){0,5}:\").concat(IPv4AddressFormat, \"|(?::\").concat(IPv6SegmentFormat, \"){1,7}|:))\") + ')(%[0-9a-zA-Z-.:]{1,})?$');\nexport default function isIP(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  assertString(str);\n  version = String(version);\n  if (!version) {\n    return isIP(str, 4) || isIP(str, 6);\n  }\n  if (version === '4') {\n    return IPv4AddressRegExp.test(str);\n  }\n  if (version === '6') {\n    return IPv6AddressRegExp.test(str);\n  }\n  return false;\n}", "import assertString from './util/assertString';\nimport isByteLength from './isByteLength';\nimport isFQDN from './isFQDN';\nimport isIP from './isIP';\nimport merge from './util/merge';\nvar default_email_options = {\n  allow_display_name: false,\n  allow_underscores: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true,\n  blacklisted_chars: '',\n  ignore_max_length: false,\n  host_blacklist: [],\n  host_whitelist: []\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar splitNameAddress = /^([^\\x00-\\x1F\\x7F-\\x9F\\cX]+)</i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar gmailUserPart = /^[a-z\\d]+$/;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A1-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\nvar defaultMaxEmailLength = 254;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\n/**\n * Validate display name according to the RFC2822: https://tools.ietf.org/html/rfc2822#appendix-A.1.2\n * @param {String} display_name\n */\nfunction validateDisplayName(display_name) {\n  var display_name_without_quotes = display_name.replace(/^\"(.+)\"$/, '$1');\n  // display name with only spaces is not valid\n  if (!display_name_without_quotes.trim()) {\n    return false;\n  }\n\n  // check whether display name contains illegal character\n  var contains_illegal = /[\\.\";<>]/.test(display_name_without_quotes);\n  if (contains_illegal) {\n    // if contains illegal characters,\n    // must to be enclosed in double-quotes, otherwise it's not a valid display name\n    if (display_name_without_quotes === display_name) {\n      return false;\n    }\n\n    // the quotes in display name must start with character symbol \\\n    var all_start_with_back_slash = display_name_without_quotes.split('\"').length === display_name_without_quotes.split('\\\\\"').length;\n    if (!all_start_with_back_slash) {\n      return false;\n    }\n  }\n  return true;\n}\nexport default function isEmail(str, options) {\n  assertString(str);\n  options = merge(options, default_email_options);\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(splitNameAddress);\n    if (display_email) {\n      var display_name = display_email[1];\n\n      // Remove display name and angle brackets to get email address\n      // Can be done in the regex but will introduce a ReDOS (See  #1597 for more info)\n      str = str.replace(display_name, '').replace(/(^<|>$)/g, '');\n\n      // sometimes need to trim the last space to get the display name\n      // because there may be a space between display name and email address\n      // eg. myname <address@gmail.com>\n      // the display name is `myname` instead of `myname `, so need to trim the last space\n      if (display_name.endsWith(' ')) {\n        display_name = display_name.slice(0, -1);\n      }\n      if (!validateDisplayName(display_name)) {\n        return false;\n      }\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n  if (!options.ignore_max_length && str.length > defaultMaxEmailLength) {\n    return false;\n  }\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var lower_domain = domain.toLowerCase();\n  if (options.host_blacklist.includes(lower_domain)) {\n    return false;\n  }\n  if (options.host_whitelist.length > 0 && !options.host_whitelist.includes(lower_domain)) {\n    return false;\n  }\n  var user = parts.join('@');\n  if (options.domain_specific_validation && (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com')) {\n    /*\n      Previously we removed dots for gmail addresses before validating.\n      This was removed because it allows `multiple..dots@gmail.com`\n      to be reported as valid, but it is not.\n      Gmail only normalizes single dots, removing them from here is pointless,\n      should be done in normalizeEmail\n    */\n    user = user.toLowerCase();\n\n    // Removing sub-address from username before gmail validation\n    var username = user.split('+')[0];\n\n    // Dots are not included in gmail length restriction\n    if (!isByteLength(username.replace(/\\./g, ''), {\n      min: 6,\n      max: 30\n    })) {\n      return false;\n    }\n    var _user_parts = username.split('.');\n    for (var i = 0; i < _user_parts.length; i++) {\n      if (!gmailUserPart.test(_user_parts[i])) {\n        return false;\n      }\n    }\n  }\n  if (options.ignore_max_length === false && (!isByteLength(user, {\n    max: 64\n  }) || !isByteLength(domain, {\n    max: 254\n  }))) {\n    return false;\n  }\n  if (!isFQDN(domain, {\n    require_tld: options.require_tld,\n    ignore_max_length: options.ignore_max_length,\n    allow_underscores: options.allow_underscores\n  })) {\n    if (!options.allow_ip_domain) {\n      return false;\n    }\n    if (!isIP(domain)) {\n      if (!domain.startsWith('[') || !domain.endsWith(']')) {\n        return false;\n      }\n      var noBracketdomain = domain.slice(1, -1);\n      if (noBracketdomain.length === 0 || !isIP(noBracketdomain)) {\n        return false;\n      }\n    }\n  }\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n  var user_parts = user.split('.');\n  for (var _i = 0; _i < user_parts.length; _i++) {\n    if (!pattern.test(user_parts[_i])) {\n      return false;\n    }\n  }\n  if (options.blacklisted_chars) {\n    if (user.search(new RegExp(\"[\".concat(options.blacklisted_chars, \"]+\"), 'g')) !== -1) return false;\n  }\n  return true;\n}", "import assertString from './util/assertString';\nimport { decimal } from './alpha';\nexport default function isFloat(str, options) {\n  assertString(str);\n  options = options || {};\n  var _float = new RegExp(\"^(?:[-+])?(?:[0-9]+)?(?:\\\\\".concat(options.locale ? decimal[options.locale] : '.', \"[0-9]*)?(?:[eE][\\\\+\\\\-]?(?:[0-9]+))?$\"));\n  if (str === '' || str === '.' || str === ',' || str === '-' || str === '+') {\n    return false;\n  }\n  var value = parseFloat(str.replace(',', '.'));\n  return _float.test(str) && (!options.hasOwnProperty('min') || value >= options.min) && (!options.hasOwnProperty('max') || value <= options.max) && (!options.hasOwnProperty('lt') || value < options.lt) && (!options.hasOwnProperty('gt') || value > options.gt);\n}\nexport var locales = Object.keys(decimal);", "function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nimport assertString from './util/assertString';\n\n/* eslint-disable prefer-rest-params */\nexport default function isLength(str, options) {\n  assertString(str);\n  var min;\n  var max;\n  if (_typeof(options) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isLength(str, min [, max])\n    min = arguments[1] || 0;\n    max = arguments[2];\n  }\n  var presentationSequences = str.match(/(\\uFE0F|\\uFE0E)/g) || [];\n  var surrogatePairs = str.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g) || [];\n  var len = str.length - presentationSequences.length - surrogatePairs.length;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}", "import assertString from './util/assertString';\nexport default function matches(str, pattern, modifiers) {\n  assertString(str);\n  if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {\n    pattern = new RegExp(pattern, modifiers);\n  }\n  return !!str.match(pattern);\n}", "import isFloat from './isFloat';\nexport default function toFloat(str) {\n  if (!isFloat(str)) return NaN;\n  return parseFloat(str);\n}", "import isAfter from 'validator/es/lib/isAfter.js';\nimport isBefore from 'validator/es/lib/isBefore.js';\nimport isBoolean from 'validator/es/lib/isBoolean.js';\nimport isDecimal from 'validator/es/lib/isDecimal.js';\nimport isEmail from 'validator/es/lib/isEmail.js';\nimport isFloat from 'validator/es/lib/isFloat.js';\nimport isLength from 'validator/es/lib/isLength.js';\nimport matches from 'validator/es/lib/matches.js';\nimport toFloat from 'validator/es/lib/toFloat.js';\nimport type { Validator } from './Validation.js';\n\ninterface ValidatorAttributes {\n  message?: string;\n}\ninterface ValueNumberAttributes extends ValidatorAttributes {\n  value: number | string;\n}\ninterface DigitAttributes extends ValidatorAttributes {\n  integer: number;\n  fraction: number;\n}\ninterface SizeAttributes extends ValidatorAttributes {\n  min?: number;\n  max?: number;\n}\ninterface PatternAttributes extends ValidatorAttributes {\n  regexp: RegExp | string;\n}\ninterface DecimalAttributes extends ValueNumberAttributes {\n  inclusive?: boolean;\n}\n\nabstract class AbstractValidator<T> implements Validator<T> {\n  message = 'invalid';\n\n  impliesRequired = false;\n\n  constructor(attrs?: ValidatorAttributes) {\n    if (attrs?.message) {\n      this.message = attrs.message;\n    }\n  }\n\n  abstract validate(value: T): Promise<boolean> | boolean;\n  abstract get name(): string;\n}\n\nexport class Required<T> extends AbstractValidator<T> {\n  override impliesRequired = true;\n\n  override validate(value: T): boolean {\n    if (typeof value === 'string' || Array.isArray(value)) {\n      return value.length > 0;\n    }\n    if (typeof value === 'number') {\n      return Number.isFinite(value);\n    }\n    return value !== undefined;\n  }\n\n  readonly name: string = 'Required';\n}\n\nfunction _asValidatorAttributes(attrs: PatternAttributes | RegExp | ValueNumberAttributes | number | string) {\n  return typeof attrs === 'object' ? attrs : {};\n}\n\nfunction _value(attrs: ValueNumberAttributes | number | string) {\n  return typeof attrs === 'object' ? attrs.value : attrs;\n}\n\nabstract class NumberValidator<T> extends AbstractValidator<T> {\n  override validate(value: T) {\n    const num = Number(value);\n    return !isNaN(num) && isFinite(num);\n  }\n}\n\nexport class IsNumber extends NumberValidator<number | null | undefined> {\n  optional: boolean;\n\n  constructor(optional: boolean, attrs?: ValidatorAttributes) {\n    super({ message: 'must be a number', ...attrs });\n    this.optional = optional;\n  }\n\n  override validate(value: number | null | undefined): boolean {\n    return (this.optional && value == null) || super.validate(value);\n  }\n\n  readonly name = 'IsNumber';\n}\n\nabstract class ValueNumberValidator<T> extends NumberValidator<T> {\n  value: number;\n\n  protected constructor(attrs: ValueNumberAttributes | number | string) {\n    super(_asValidatorAttributes(attrs));\n    const val = _value(attrs);\n    this.value = typeof val === 'string' ? parseFloat(val) : val;\n  }\n}\n\n// JSR380 equivalent (https://beanvalidation.org/2.0/spec/#builtinconstraints)\nexport class Email extends AbstractValidator<string> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be a well-formed email address', ...attrs });\n  }\n\n  override validate(value: string | null | undefined): boolean {\n    return !value || isEmail(value);\n  }\n\n  readonly name = 'Email';\n}\n\nexport class Null extends AbstractValidator<any> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be null', ...attrs });\n  }\n\n  override validate(value: any): boolean {\n    return value == null;\n  }\n\n  readonly name = 'Null';\n}\n\nexport class NotNull<T> extends Required<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must not be null', ...attrs });\n  }\n\n  override validate(value: T): value is NonNullable<T> {\n    return !new Null().validate(value);\n  }\n\n  override readonly name = 'NotNull';\n}\n\nexport class NotEmpty<T> extends Required<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must not be empty', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return (\n      super.validate(value) && new NotNull<T>().validate(value) && ((value as { length?: number }).length ?? 0) > 0\n    );\n  }\n\n  override readonly name = 'NotEmpty';\n}\n\nexport class NotBlank<T> extends Required<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must not be blank', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return super.validate(value) && new NotNull<T>().validate(value) && String(value).trim().length > 0;\n  }\n\n  override readonly name = 'NotBlank';\n}\n\nexport class AssertTrue<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be true', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return isBoolean(String(value)) && String(value) === 'true';\n  }\n\n  readonly name = 'AssertTrue';\n}\n\nexport class AssertFalse<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be false', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return !new AssertTrue<T>().validate(value);\n  }\n\n  readonly name = 'AssertFalse';\n}\n\nfunction _asValueNumberAttributes(attrs: ValueNumberAttributes | number | string) {\n  return typeof attrs === 'object' ? attrs : { value: attrs };\n}\n\nexport class Min<T> extends ValueNumberValidator<T> {\n  constructor(attrs: ValueNumberAttributes | number | string) {\n    super({\n      message: `must be greater than or equal to ${_value(attrs)}`,\n      ..._asValueNumberAttributes(attrs),\n    });\n  }\n\n  override validate(value: T): boolean {\n    return super.validate(value) && isFloat(String(value), { min: this.value });\n  }\n\n  readonly name = 'Min';\n}\n\nexport class Max<T> extends ValueNumberValidator<T> {\n  constructor(attrs: ValueNumberAttributes | number | string) {\n    super({\n      message: `must be less than or equal to ${_value(attrs)}`,\n      ..._asValueNumberAttributes(attrs),\n    });\n  }\n\n  override validate(value: T): boolean {\n    return super.validate(value) && isFloat(String(value), { max: this.value });\n  }\n\n  readonly name = 'Max';\n}\n\nfunction _inclusive(attrs: DecimalAttributes | number | string) {\n  return typeof attrs !== 'object' || attrs.inclusive !== false;\n}\n\nexport class DecimalMin<T> extends ValueNumberValidator<T> {\n  inclusive: boolean;\n\n  constructor(attrs: DecimalAttributes | number | string) {\n    super({\n      message: `must be greater than ${_inclusive(attrs) ? 'or equal to ' : ''}${_value(attrs)}`,\n      ..._asValueNumberAttributes(attrs),\n    });\n    this.inclusive = _inclusive(attrs);\n  }\n\n  override validate(value: T): boolean {\n    return super.validate(value) && isFloat(String(value), { [this.inclusive ? 'min' : 'gt']: this.value });\n  }\n\n  readonly name = 'DecimalMin';\n}\n\nexport class DecimalMax<T> extends ValueNumberValidator<T> {\n  inclusive: boolean;\n\n  constructor(attrs: DecimalAttributes | number | string) {\n    super({\n      message: `must be less than ${_inclusive(attrs) ? 'or equal to ' : ''}${_value(attrs)}`,\n      ..._asValueNumberAttributes(attrs),\n    });\n    this.inclusive = _inclusive(attrs);\n  }\n\n  override validate(value: T): boolean {\n    return super.validate(value) && isFloat(String(value), { [this.inclusive ? 'max' : 'lt']: this.value });\n  }\n\n  readonly name = 'DecimalMax';\n}\n\nexport class Negative<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be less than 0', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return toFloat(String(value)) < 0;\n  }\n\n  readonly name = 'Negative';\n}\n\nexport class NegativeOrZero<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be less than or equal to 0', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return toFloat(String(value)) <= 0;\n  }\n\n  readonly name = 'NegativeOrZero';\n}\n\nexport class Positive<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be greater than 0', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return toFloat(String(value)) > 0;\n  }\n\n  readonly name = 'Positive';\n}\n\nexport class PositiveOrZero<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be greater than or equal to 0', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return toFloat(String(value)) >= 0;\n  }\n\n  readonly name = 'PositiveOrZero';\n}\n\nfunction _min(attrs: SizeAttributes) {\n  return attrs.min ?? 0;\n}\n\nfunction _max(attrs: SizeAttributes) {\n  return attrs.max ?? Number.MAX_SAFE_INTEGER;\n}\n\nexport class Size extends AbstractValidator<string> {\n  min: number;\n  max: number;\n\n  constructor(attrs: SizeAttributes = {}) {\n    super({ message: `size must be between ${_min(attrs)} and ${_max(attrs)}`, ...attrs });\n    this.min = _min(attrs);\n    this.max = _max(attrs);\n    if (this.min > 0) {\n      this.impliesRequired = true;\n    }\n  }\n\n  override validate(value: string): boolean {\n    if (this.min && this.min > 0 && !new Required().validate(value)) {\n      return false;\n    }\n    // eslint-disable-next-line sort-keys\n    return isLength(value, { min: this.min, max: this.max });\n  }\n\n  readonly name = 'Size';\n}\n\nexport class Digits<T> extends AbstractValidator<T> {\n  integer: number;\n  fraction: number;\n\n  constructor(attrs: DigitAttributes) {\n    super({\n      message: `numeric value out of bounds (<${attrs.integer} digits>.<${attrs.fraction} digits> expected)`,\n      ...attrs,\n    });\n    this.integer = attrs.integer;\n    this.fraction = attrs.fraction;\n  }\n\n  override validate(value: T): boolean {\n    return (\n      String(Math.floor(Math.abs(toFloat(String(value))))).length <= this.integer &&\n      // eslint-disable-next-line camelcase\n      isDecimal(String(value), { decimal_digits: `0,${this.fraction}` })\n    );\n  }\n\n  readonly name = 'Digits';\n}\n\nexport class Past<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be a past date', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return isBefore(String(value));\n  }\n\n  readonly name = 'Past';\n}\n\n/*\n  @PastOrPresent has no client-side implementation yet.\n  It would consider any input valid and let the server-side to do validation.\n  (It's not trivial to ensure the same granularity of _present_ as on the server-side:\n  year / month / day / minute).\n*/\n// export class PastOrPresent extends AbstractValidator<any> {\n//   constructor(attrs?: ValidatorAttributes) {\n//     super({ message: 'must be a date in the past or in the present', ...attrs });\n//   }\n//   validate() {\n//     return true;\n//   }\n// }\n\nexport class Future<T> extends AbstractValidator<T> {\n  constructor(attrs?: ValidatorAttributes) {\n    super({ message: 'must be a future date', ...attrs });\n  }\n\n  override validate(value: T): boolean {\n    return isAfter(String(value));\n  }\n\n  readonly name = 'Future';\n}\n\n/*\n  @FutureOrPresent has no client-side implementation yet.\n  It would consider any input valid and let the server-side to do validation.\n  (It's not trivial to ensure the same granularity of _present_ as on the server-side:\n  year / month / day / minute).\n*/\n// export class FutureOrPresent extends AbstractValidator<any> {\n//   constructor(attrs?: ValidatorAttributes) {\n//     super({ message: 'must be a date in the present or in the future', ...attrs });\n//   }\n//   validate = () => true;\n// }\n\nfunction _regexp(attrs: PatternAttributes | RegExp | string) {\n  if (typeof attrs === 'string') {\n    return new RegExp(attrs, 'u');\n  }\n\n  if (attrs instanceof RegExp) {\n    return attrs;\n  }\n\n  if (typeof attrs.regexp === 'string') {\n    return new RegExp(attrs.regexp, 'u');\n  }\n\n  return attrs.regexp;\n}\n\nexport class Pattern extends AbstractValidator<string> {\n  regexp: RegExp;\n\n  constructor(attrs: PatternAttributes | RegExp | string) {\n    super({\n      message: `must match the following regular expression: ${_regexp(attrs).toString()}`,\n      ..._asValidatorAttributes(attrs),\n    });\n    this.regexp = _regexp(attrs);\n  }\n\n  override validate(value: any): boolean {\n    return matches(value, this.regexp);\n  }\n\n  readonly name = 'Pattern';\n}\n\n/**\n * Validator that reports an error when the bound HTML element validation\n * returns false from `element.checkValidity()` and `element.validity.valid`.\n */\nexport class ValidityStateValidator<T> extends AbstractValidator<T> {\n  override message = '';\n\n  // eslint-disable-next-line no-useless-constructor,@typescript-eslint/no-useless-constructor\n  constructor() {\n    super();\n  }\n\n  override validate(): boolean {\n    return false;\n  }\n\n  readonly name = 'ValidityStateValidator';\n}\n", "import isNumeric from 'validator/es/lib/isNumeric.js';\nimport { type BinderNode, getBinderNode } from './BinderNode.js';\nimport type { Validator } from './Validation.js';\nimport { IsNumber } from './Validators.js';\n\nexport const _createEmptyItemValue = Symbol('createEmptyItemValue');\nexport const _parent = Symbol('parent');\nexport const _key = Symbol('key');\nexport const _fromString = Symbol('fromString');\nexport const _validators = Symbol('validators');\nexport const _meta = Symbol('meta');\nexport const _getPropertyModel = Symbol('getPropertyModel');\nexport const _enum = Symbol('enum');\nexport const _items = Symbol('items');\n\nconst _optional = Symbol('optional');\n\nexport interface HasFromString<T> {\n  [_fromString](value: string): T;\n}\n\nexport function hasFromString<T>(model: AbstractModel<T>): model is AbstractModel<T> & HasFromString<T> {\n  return _fromString in model;\n}\n\nexport type Value<M> = M extends AbstractModel<infer T> ? T : never;\n\nexport const modelDetachedParent = { $value$: undefined };\n\nexport type ModelParent = AbstractModel | BinderNode | typeof modelDetachedParent;\n\nexport interface Annotation {\n  name: string;\n  attributes?: Record<string, unknown>;\n}\n\nexport interface ModelMetadata {\n  javaType?: string;\n  annotations?: Annotation[];\n}\n\nexport interface ModelOptions<T> {\n  validators?: ReadonlyArray<Validator<T>>;\n  meta?: ModelMetadata;\n}\n\nexport type DetachedModelConstructor<M> = {\n  prototype: object;\n  new (parent: typeof modelDetachedParent, key: '$value$', optional: boolean): M;\n};\n\nexport function createDetachedModel<M extends AbstractModel>(type: DetachedModelConstructor<M>): M {\n  return new type(modelDetachedParent, '$value$', false);\n}\n\nexport abstract class AbstractModel<T = unknown> {\n  static createEmptyValue(): unknown {\n    return undefined;\n  }\n\n  declare readonly ['constructor']: typeof AbstractModel<T>;\n\n  readonly [_parent]?: ModelParent;\n\n  readonly [_validators]: ReadonlyArray<Validator<T>>;\n\n  readonly [_meta]: ModelMetadata;\n\n  readonly [_optional]: boolean;\n\n  [_key]: keyof any;\n\n  constructor(parent: ModelParent, key: keyof any, optional: boolean, options?: ModelOptions<T>) {\n    this[_parent] = parent;\n    this[_key] = key;\n    this[_optional] = optional;\n    this[_validators] = options?.validators ?? [];\n    this[_meta] = options?.meta ?? {};\n  }\n\n  /**\n   * @deprecated Use {@link BinderNode.value} with string conversion instead\n   *\n   * @example\n   * ```ts\n   * const result = String(binder.for(model).value);\n   * ```\n   */\n  toString(): string {\n    return String(this.valueOf());\n  }\n\n  /**\n   * @deprecated Use {@link BinderNode.value} instead\n   *\n   * @example\n   * ```ts\n   * const result = binder.for(model).value;\n   * ```\n   */\n  valueOf(): T {\n    const { value } = getBinderNode(this);\n\n    if (value === undefined) {\n      throw new TypeError('Value is undefined');\n    }\n\n    return value! as T;\n  }\n}\n\nexport abstract class PrimitiveModel<T> extends AbstractModel<T> {}\n\nexport class BooleanModel extends PrimitiveModel<boolean> implements HasFromString<boolean> {\n  static override createEmptyValue = Boolean;\n\n  [_fromString](str: string): boolean {\n    // This implementation matches the values accepted by validator.js and converts all other values to false\n    // See https://github.com/validatorjs/validator.js/blob/master/src/lib/isBoolean.js\n    return ['true', '1', 'yes'].includes(str.toLowerCase());\n  }\n}\n\nexport class NumberModel extends PrimitiveModel<number> implements HasFromString<number | undefined> {\n  static override createEmptyValue(): number {\n    return NaN;\n  }\n\n  constructor(parent: ModelParent, key: keyof any, optional: boolean, options?: ModelOptions<number>) {\n    // Prepend a built-in validator to indicate NaN input\n    const validators = [new IsNumber(optional), ...(options?.validators ?? [])];\n    super(parent, key, optional, { ...options, validators });\n  }\n\n  [_fromString](str: string): number | undefined {\n    // Returning undefined is needed to support passing the validation when the value of an optional number field is\n    // an empty string\n    if (str === '') return undefined;\n    return isNumeric(str) ? Number.parseFloat(str) : NaN;\n  }\n}\n\nexport class StringModel extends PrimitiveModel<string> implements HasFromString<string> {\n  static override createEmptyValue = String;\n  [_fromString] = String;\n}\n\ndeclare enum Enum {}\n\nexport function makeEnumEmptyValueCreator<M extends EnumModel>(type: DetachedModelConstructor<M>): () => Value<M> {\n  const { [_enum]: enumObject } = createDetachedModel(type);\n  const defaultValue = Object.values(enumObject)[0] as Value<M>;\n\n  return () => defaultValue;\n}\n\nexport abstract class EnumModel<E extends typeof Enum = typeof Enum>\n  extends AbstractModel<E[keyof E]>\n  implements HasFromString<E[keyof E] | undefined>\n{\n  abstract readonly [_enum]: E;\n\n  [_fromString](value: string): E[keyof E] | undefined {\n    return value in this[_enum] ? (value as E[keyof E]) : undefined;\n  }\n}\n\nexport function* getObjectModelOwnAndParentGetters<M extends ObjectModel>(\n  model: M,\n): Generator<readonly [key: keyof Value<M>, getter: () => AbstractModel]> {\n  for (\n    let proto = Object.getPrototypeOf(model);\n    proto !== ObjectModel.prototype;\n    proto = Object.getPrototypeOf(proto)\n  ) {\n    const descriptors = Object.getOwnPropertyDescriptors(proto);\n    for (const [name, { get }] of Object.entries(descriptors)) {\n      if (get) {\n        yield [name as keyof Value<M>, get];\n      }\n    }\n  }\n}\n\nexport function makeObjectEmptyValueCreator<M extends ObjectModel>(type: DetachedModelConstructor<M>): () => Value<M> {\n  const model = createDetachedModel(type);\n\n  return () => {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    const obj: Partial<Value<M>> = {};\n\n    // Iterate the model class hierarchy up to the ObjectModel, and extract\n    // the property getter names from every prototypes\n    for (const [key, getter] of getObjectModelOwnAndParentGetters(model)) {\n      const propertyModel = getter.call(model);\n      obj[key] = (\n        propertyModel[_optional] ? undefined : propertyModel.constructor.createEmptyValue()\n      ) as Value<M>[keyof Value<M>];\n    }\n\n    return obj as Value<M>;\n  };\n}\n\ntype ChildModel<T extends Record<never, never>, K extends keyof T> = AbstractModel<NonNullable<T[K]>>;\n\nexport class ObjectModel<T extends Record<never, never> = Record<never, never>> extends AbstractModel<T> {\n  static override createEmptyValue = makeObjectEmptyValueCreator(ObjectModel);\n\n  #properties: { [K in keyof T]?: ChildModel<T, K> } = {};\n\n  protected [_getPropertyModel]<K extends keyof T, M extends ChildModel<T, K>>(\n    key: K,\n    init: (parent: this, key: K) => M,\n  ): M {\n    if (!this.#properties[key]) {\n      this.#properties[key] = init(this, key);\n    }\n\n    return this.#properties[key] as M;\n  }\n}\n\nexport type ArrayItemModel<M> = M extends ArrayModel<infer MItem> ? MItem : never;\n\nexport class ArrayModel<MItem extends AbstractModel = AbstractModel> extends AbstractModel<Array<Value<MItem>>> {\n  static override createEmptyValue(): [] {\n    return [];\n  }\n\n  [_createEmptyItemValue]: () => Value<MItem>;\n\n  // The `parent` parameter is AbstractModel here for purpose; for some reason, setting it to `ArrayModel<MItem>` or\n  // `this` breaks the type inference in TS (v5.3.2).\n  readonly #createItem: (parent: AbstractModel, index: number) => MItem;\n  #items: Array<MItem | undefined> = [];\n\n  constructor(\n    parent: ModelParent,\n    key: keyof any,\n    optional: boolean,\n    createItem: (parent: AbstractModel, key: number) => MItem,\n    options?: ModelOptions<Array<Value<MItem>>>,\n  ) {\n    super(parent, key, optional, options);\n    this.#createItem = createItem;\n    this[_createEmptyItemValue] = createItem(this, 0).constructor.createEmptyValue as () => Value<MItem>;\n  }\n\n  *[_items](): Generator<MItem, void, void> {\n    const values = getBinderNode(this).value ?? [];\n\n    if (values.length !== this.#items.length) {\n      this.#items.length = values.length;\n    }\n\n    for (let i = 0; i < values.length; i++) {\n      let item: MItem | undefined = this.#items[i];\n\n      if (!item) {\n        item = this.#createItem(this, i);\n        this.#items[i] = item;\n      }\n\n      yield item;\n    }\n  }\n\n  /**\n   * Iterates over the current model and yields a binder node for every item\n   * model.\n   *\n   * @deprecated Use the {@link m.items} function instead. For example, in React:\n   * ```tsx\n   * const {model, field} = useForm(GroupModel);\n   * return Array.from(m.items(model.people), (personModel) =>\n   *   <TextField label=\"Full name\" {...field(personModel.fullName)} />\n   * );\n   * ```\n   * In Lit:\n   * ```ts\n   * return html`${repeat(\n   *   m.items(this.binder.model.people),\n   *   (personModel) => html`<vaadin-text-field label=\"Full name\" ${field(personModel.fullName)}></vaadin-text-field>`,\n   * )}`;\n   * ```\n   */\n  *[Symbol.iterator](): IterableIterator<BinderNode<MItem>> {\n    for (const item of this[_items]()) {\n      yield getBinderNode(item);\n    }\n  }\n}\n\nexport const m = {\n  /**\n   * Returns an iterator over item models in the array model.\n   *\n   * @param model - The array model to iterate over.\n   * @returns An iterator over item models.\n   */\n  items<M extends ArrayModel>(model: M): Generator<ArrayItemModel<M>, void, void> {\n    return model[_items]() as Generator<ArrayItemModel<M>, void, void>;\n  },\n};\n", "/**\n * Symbol for storing `ValidityState` in the binder nodes.\n */\nexport const _validity = Symbol('validity');\n\n/**\n * Default validity state with `valid` flag set, assuming a valid state.\n */\nexport const defaultValidity: ValidityState = {\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valueMissing: false,\n  valid: true,\n};\n", "/* eslint-disable @typescript-eslint/prefer-nullish-coalescing */\n/*\n * Copyright 2000-2020 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n// TODO: Fix dependency cycle\n\nimport type { BinderRoot } from './BinderRoot.js';\nimport {\n  _createEmptyItemValue,\n  _key,\n  _parent,\n  _validators,\n  AbstractModel,\n  type ArrayItemModel,\n  ArrayModel,\n  getObjectModelOwnAndParentGetters,\n  ObjectModel,\n  type Value,\n} from './Models.js';\nimport type { ClassStaticProperties } from './types.js';\nimport type { Validator, ValueError } from './Validation.js';\nimport { ValidityStateValidator } from './Validators.js';\nimport { _validity } from './Validity.js';\n\nexport const _updateValidation = Symbol('updateValidation');\nexport const _update = Symbol('update');\nexport const _setErrorsWithDescendants = Symbol('setErrorsWithDescendants');\nexport const _clearValidation = Symbol('clearValidation');\n\nconst nodes = new WeakMap<AbstractModel, BinderNode>();\n\nexport function getBinderNode<M extends AbstractModel>(model: M): BinderNode<M> {\n  let node = nodes.get(model);\n\n  if (!node) {\n    node = new BinderNode(model);\n    nodes.set(model, node);\n  }\n\n  return node as BinderNode<M>;\n}\n\nfunction getErrorPropertyName(valueError: ValueError): string {\n  return typeof valueError.property === 'string' ? valueError.property : getBinderNode(valueError.property).name;\n}\n\nfunction updateObjectOrArrayKey<M extends AbstractModel>(\n  model: M,\n  value: Value<M>,\n  key: keyof any,\n  keyValue: unknown,\n): Value<M> {\n  if (model instanceof ObjectModel) {\n    // Value contained in object - replace object in parent\n    return {\n      ...(value as Record<never, never> & Value<M>),\n      [key]: keyValue,\n    };\n  }\n\n  if (keyValue === undefined) {\n    throw new TypeError('Unexpected undefined value');\n  }\n\n  if (model instanceof ArrayModel) {\n    // Value contained in array - replace array in parent\n    const array = (value as unknown[]).slice();\n    array[key as number] = keyValue;\n    return array as Value<M>;\n  }\n\n  throw new TypeError(`Unknown model type ${(model as AbstractModel).constructor.name}`);\n}\n\nexport const CHANGED = new Event('binder-node-changed');\n\nclass NotArrayModelError extends Error {\n  constructor() {\n    super('The model does not represent array');\n  }\n}\n\nclass NotArrayItemModelError extends Error {\n  constructor() {\n    super('The model does not represent array item');\n  }\n}\n\ndeclare class ArrayItemBinderNode<M extends AbstractModel> extends BinderNode<M> {\n  // @ts-expect-error: re-defining the parent getter.\n  declare readonly parent: BinderNode<ArrayModel<M>>;\n}\n\nconst defaultArrayItemCache = new WeakMap<BinderNode, unknown>();\n\n/**\n * The BinderNode\\<M\\> class provides the form binding related APIs\n * with respect to a particular model instance.\n *\n * Structurally, model instances form a tree, in which the object\n * and array models have child nodes of field and array item model\n * instances.\n */\nexport class BinderNode<M extends AbstractModel = AbstractModel> extends EventTarget {\n  declare readonly ['constructor']: ClassStaticProperties<typeof BinderNode<M>>;\n  readonly model: M;\n  /**\n   * The validity state read from the bound element, if any. Represents the\n   * HTML element internal validation.\n   *\n   * For elements with `validity.valid === false`, the value in the\n   * bound element is considered as invalid.\n   */\n  [_validity]?: ValidityState;\n  #ownErrors?: ReadonlyArray<ValueError<Value<M>>>;\n  #validators: ReadonlyArray<Validator<Value<M>>>;\n  readonly #validityStateValidator: ValidityStateValidator<Value<M>>;\n  #visited = false;\n\n  constructor(model: M) {\n    super();\n    this.model = model;\n    nodes.set(model, this);\n    this.#validityStateValidator = new ValidityStateValidator<Value<M>>();\n    this.#validators = model[_validators];\n\n    // Workaround for children initialization with private props\n    if (this.constructor === BinderNode) {\n      this.initializeValue();\n    }\n  }\n\n  /**\n   * The binder for the top-level model.\n   */\n  get binder(): BinderRoot {\n    const binder = this.parent?.binder;\n\n    if (!binder) {\n      throw new TypeError('BinderNode is detached');\n    }\n\n    return binder;\n  }\n\n  /**\n   * The default value related to the model\n   */\n  get defaultValue(): Value<M> | undefined {\n    const key = this.model[_key];\n    const parentDefaultValue = this.parent!.defaultValue as { readonly [key in typeof key]?: Value<M> };\n\n    if (this.#isArrayItem() && !(key in parentDefaultValue)) {\n      if (defaultArrayItemCache.has(this.parent)) {\n        return defaultArrayItemCache.get(this.parent) as Value<M>;\n      }\n\n      const value = this.model.constructor.createEmptyValue();\n      defaultArrayItemCache.set(this.parent, value);\n      return value as Value<M>;\n    }\n\n    return parentDefaultValue[key];\n  }\n\n  /**\n   * True if the current value is different from the defaultValue.\n   */\n  get dirty(): boolean {\n    return this.value !== this.defaultValue;\n  }\n\n  /**\n   * The combined array of all errors for this node\u2019s model and all its nested\n   * models\n   */\n  get errors(): readonly ValueError[] {\n    return [...Array.from(this.#getChildBinderNodes(), (node) => node.errors).flat(), ...this.ownErrors];\n  }\n\n  /**\n   * Indicates if there is any error for the node's model.\n   */\n  get invalid(): boolean {\n    return this.errors.length > 0;\n  }\n\n  /**\n   * The name generated from the model structure, used to set the name\n   * attribute on the field components.\n   */\n  get name(): string {\n    let { model }: { model: AbstractModel } = this;\n    let name = '';\n\n    while (model[_parent] instanceof AbstractModel) {\n      name = `${String(model[_key])}${name ? `.${name}` : ''}`;\n      model = model[_parent];\n    }\n\n    return name;\n  }\n\n  /**\n   * The array of validation errors directly related with the model.\n   */\n  get ownErrors(): ReadonlyArray<ValueError<Value<M>>> {\n    return this.#ownErrors ? this.#ownErrors : [];\n  }\n\n  /**\n   * The parent node, if this binder node corresponds to a nested model,\n   * otherwise undefined for the top-level binder.\n   */\n  get parent(): BinderNode | undefined {\n    const modelParent = this.model[_parent];\n    return modelParent instanceof AbstractModel ? getBinderNode(modelParent) : undefined;\n  }\n\n  /**\n   * True if the value is required to be non-empty.\n   */\n  get required(): boolean {\n    return this.#validators.some((validator) => validator.impliesRequired);\n  }\n\n  /**\n   * The array of validators for the model. The default value is defined in the\n   * model.\n   */\n  get validators(): ReadonlyArray<Validator<Value<M>>> {\n    return this.#validators;\n  }\n\n  set validators(validators: ReadonlyArray<Validator<Value<M>>>) {\n    this.#validators = validators;\n    this.dispatchEvent(CHANGED);\n  }\n\n  /**\n   * The current value related to the model\n   */\n  get value(): Value<M> | undefined {\n    if (!this.parent) {\n      return undefined;\n    }\n\n    this.initializeValue();\n\n    const key = this.model[_key];\n\n    // The value of parent in unknown, so we need to cast it.\n    type ParentValue = { readonly [K in typeof key]: Value<M> };\n    return (this.parent.value as ParentValue)[key];\n  }\n\n  set value(value: Value<M> | undefined) {\n    this.initializeValue();\n    this.#setValueState(value, undefined);\n  }\n\n  /**\n   * True if the bound field was ever focused and blurred by the user.\n   */\n  get visited(): boolean {\n    return this.#visited;\n  }\n\n  set visited(v: boolean) {\n    if (this.#visited !== v) {\n      this.#visited = v;\n      this[_updateValidation]().catch(() => {});\n      this.dispatchEvent(CHANGED);\n    }\n  }\n\n  /**\n   * A helper method to add a validator\n   *\n   * @param validator - a validator\n   */\n  addValidator(validator: Validator<Value<M>>): void {\n    this.validators = [...this.#validators, validator];\n    this.dispatchEvent(CHANGED);\n  }\n\n  /**\n   * Append an item to the array value.\n   *\n   * Requires the context model to be an array reference.\n   *\n   * @param item - optional new item value, an empty item is\n   * appended if the argument is omitted\n   */\n  appendItem(item?: Value<ArrayItemModel<M>>): void {\n    if (this.#isArray()) {\n      const itemValueOrEmptyValue = item ?? this.model[_createEmptyItemValue]();\n      const newValue = [...(this.value ?? []), itemValueOrEmptyValue];\n      const newDefaultValue = [...(this.defaultValue ?? []), itemValueOrEmptyValue];\n      this.#setValueState(newValue, newDefaultValue);\n    } else {\n      throw new NotArrayModelError();\n    }\n  }\n\n  /**\n   * Returns a binder node for the nested model instance.\n   *\n   * @param model - The nested model instance\n   */\n  for<N extends AbstractModel>(model: N): BinderNode<N> {\n    const binderNode = getBinderNode(model);\n    if (binderNode.binder !== this.binder) {\n      throw new Error('Unknown binder');\n    }\n\n    return binderNode;\n  }\n\n  prependItem(item?: Value<ArrayItemModel<M>>): void {\n    if (this.#isArray()) {\n      const itemValueOrEmptyValue = item ?? this.model[_createEmptyItemValue]();\n      const newValue = [itemValueOrEmptyValue, ...(this.value ?? [])];\n      const newDefaultValue = [itemValueOrEmptyValue, ...(this.defaultValue ?? [])];\n      this.#setValueState(newValue, newDefaultValue);\n    } else {\n      throw new NotArrayModelError();\n    }\n  }\n\n  removeSelf(): void {\n    if (this.#isArrayItem()) {\n      const newValue = (this.parent.value ?? []).filter((_, i) => i !== this.model[_key]);\n      const newDefaultValue = (this.parent.defaultValue ?? []).filter((_, i) => i !== this.model[_key]);\n      this.parent.#setValueState(newValue, newDefaultValue);\n    } else {\n      throw new NotArrayItemModelError();\n    }\n  }\n\n  /**\n   * Runs all validation callbacks potentially affecting this\n   * or any nested model. Returns the combined array of all\n   * errors as in the errors property.\n   */\n  async validate(): Promise<readonly ValueError[]> {\n    const errors = await Promise.all([\n      ...this.#requestValidationOfDescendants(),\n      ...this.#requestValidationWithAncestors(),\n    ]).then((arr) => arr.flat());\n    this[_setErrorsWithDescendants](errors.length ? errors : undefined);\n    this[_update]();\n    return errors;\n  }\n\n  protected [_clearValidation](): boolean {\n    if (this.#visited) {\n      this.#visited = false;\n      this.dispatchEvent(CHANGED);\n    }\n    let needsUpdate = false;\n    if (this.#ownErrors) {\n      this.#ownErrors = undefined;\n      needsUpdate = true;\n      this.dispatchEvent(CHANGED);\n    }\n    if ([...this.#getChildBinderNodes()].filter((childBinderNode) => childBinderNode[_clearValidation]()).length > 0) {\n      needsUpdate = true;\n    }\n    return needsUpdate;\n  }\n\n  protected [_setErrorsWithDescendants](errors?: readonly ValueError[]): void {\n    const { name } = this;\n    const ownErrors = errors\n      ? (errors.filter((valueError) => getErrorPropertyName(valueError) === name) as ReadonlyArray<\n          ValueError<Value<M>>\n        >)\n      : undefined;\n    const relatedErrors = errors\n      ? errors.filter((valueError) => getErrorPropertyName(valueError).startsWith(name))\n      : undefined;\n    this.#ownErrors = ownErrors;\n    for (const childBinderNode of this.#getChildBinderNodes()) {\n      childBinderNode[_setErrorsWithDescendants](relatedErrors);\n    }\n    this.dispatchEvent(CHANGED);\n  }\n\n  protected [_update](_?: Value<M>): void {\n    if (this.parent) {\n      this.parent[_update]();\n    }\n  }\n\n  protected async [_updateValidation](): Promise<void> {\n    if (this.#visited) {\n      await this.validate();\n    } else if (this.dirty || this.invalid) {\n      await Promise.all(\n        [...this.#getChildBinderNodes()].map(async (childBinderNode) => childBinderNode[_updateValidation]()),\n      );\n    }\n  }\n\n  *#getChildBinderNodes(): Generator<BinderNode, void, void> {\n    if (this.value === undefined || this.defaultValue === undefined) {\n      // Undefined value cannot have child properties and items.\n      return;\n    }\n\n    if (this.#isObject()) {\n      for (const [, getter] of getObjectModelOwnAndParentGetters(this.model)) {\n        const childModel = getter.call(this.model);\n        // We need to skip all non-initialised optional fields here in order\n        // to prevent infinite recursion for circular references in the model.\n        // Here we rely on presence of keys in `defaultValue` to detect all\n        // initialised fields. The keys in `defaultValue` are defined for all\n        // non-optional fields plus those optional fields whose values were\n        // set from initial `binder.read()` or `binder.clear()` or by using a\n        // binder node (e.g., form binding) for a nested field.\n        if (childModel[_key] in (this.defaultValue as Record<never, never>)) {\n          yield getBinderNode(childModel);\n        }\n      }\n    } else if (this.#isArray()) {\n      for (const childBinderNode of this.model) {\n        yield childBinderNode;\n      }\n    }\n  }\n\n  #isArray(): this is BinderNode<ArrayModel> {\n    return this.model instanceof ArrayModel;\n  }\n\n  #isArrayItem(): this is ArrayItemBinderNode<M> {\n    return this.model[_parent] instanceof ArrayModel;\n  }\n\n  #isObject(): this is BinderNode<ObjectModel> {\n    return this.model instanceof ObjectModel;\n  }\n\n  *#requestValidationOfDescendants(): Generator<Promise<readonly ValueError[]>, void, void> {\n    for (const node of this.#getChildBinderNodes()) {\n      yield* node.#runOwnValidators();\n      yield* node.#requestValidationOfDescendants();\n    }\n  }\n\n  *#requestValidationWithAncestors(): Generator<Promise<readonly ValueError[]>, void, void> {\n    yield* this.#runOwnValidators();\n\n    if (this.parent) {\n      yield* this.parent.#requestValidationWithAncestors();\n    }\n  }\n\n  *#runOwnValidators(): Generator<Promise<readonly ValueError[]>, void, void> {\n    const hasInvalidState = this[_validity] && !this[_validity].valid;\n    const hasBadInput = !!this[_validity]?.badInput;\n\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    if ((hasInvalidState && !hasBadInput) || !hasInvalidState) {\n      for (const validator of this.#validators) {\n        yield this.binder.requestValidation(this.model, validator);\n      }\n    }\n\n    if (hasInvalidState) {\n      yield this.binder.requestValidation(this.model, this.#validityStateValidator);\n    }\n  }\n\n  initializeValue(forceInitialize = false): void {\n    // First, make sure parents have value initialized\n    if (\n      this.parent &&\n      (this.parent.value === undefined || (this.parent.defaultValue as Value<M> | undefined) === undefined)\n    ) {\n      this.parent.initializeValue(true);\n    }\n\n    const key = this.model[_key];\n    let value: Value<M> | undefined = this.parent\n      ? (this.parent.value as { [key in typeof key]: Value<M> })[this.model[_key]]\n      : undefined;\n\n    const defaultValue: Value<M> | undefined = this.parent\n      ? (this.parent.defaultValue as { readonly [key in typeof key]: Value<M> })[this.model[_key]]\n      : undefined;\n\n    if (value === undefined) {\n      // Initialize value if this is the root level node, or it is enforced\n      if (forceInitialize || !this.parent) {\n        value = this.model.constructor.createEmptyValue() as Value<M>;\n        this.#setValueState(value, defaultValue === undefined ? value : defaultValue);\n      } else if (\n        this.parent.model instanceof ObjectModel &&\n        !(key in ((this.parent.value || {}) as { [key in typeof key]?: Value<M> }))\n      ) {\n        this.#setValueState(undefined, defaultValue === undefined ? value : defaultValue);\n      }\n    }\n  }\n\n  #setValueState(value: Value<M> | undefined, defaultValue: Value<M> | undefined): void {\n    const { parent } = this;\n    if (parent) {\n      const key = this.model[_key];\n      const parentValue = updateObjectOrArrayKey(parent.model, parent.value, key, value);\n      const keepPristine = value === defaultValue && parent.value === parent.defaultValue;\n      if (keepPristine) {\n        // Keep value and defaultValue equal, so that `dirty` stays false\n        parent.#setValueState(parentValue, parentValue);\n      } else if (defaultValue !== undefined) {\n        // Update value and defaultValue at the same time with different content\n        const parentDefaultValue = updateObjectOrArrayKey(parent.model, parent.defaultValue, key, defaultValue);\n        parent.#setValueState(parentValue, parentDefaultValue);\n      } else {\n        parent.#setValueState(parentValue, undefined);\n      }\n    } else {\n      // Root level model - update the binder root\n      const binder = this as unknown as BinderRoot<M>;\n      if (defaultValue !== undefined) {\n        binder.defaultValue = defaultValue;\n      }\n      binder.value = value!;\n    }\n  }\n}\n", "/* eslint-disable accessor-pairs,sort-keys */\nimport { type ElementPart, noChange, nothing, type PropertyPart } from 'lit';\nimport { directive, Directive, type DirectiveParameters, type PartInfo, PartType } from 'lit/directive.js';\nimport { getBinderNode } from './BinderNode.js';\nimport {\n  _fromString,\n  type AbstractModel,\n  ArrayModel,\n  BooleanModel,\n  hasFromString,\n  NumberModel,\n  ObjectModel,\n} from './Models.js';\nimport { StringModel } from './Models.js';\nimport type { ValueError } from './Validation.js';\nimport { _validity, defaultValidity } from './Validity.js';\n\nexport interface FieldBase<T> {\n  required: boolean;\n  invalid: boolean;\n  errorMessage: string;\n  value: T | undefined;\n}\n\n/**\n * Subset of the HTML constraint validation API with the `checkValidity()` method.\n */\nexport type FieldConstraintValidation = Readonly<{\n  validity: ValidityState;\n  checkValidity(): boolean;\n}>;\n\nexport type FieldElement<T = unknown> = FieldBase<T> & HTMLElement & Partial<FieldConstraintValidation>;\n\nconst props = ['required', 'invalid', 'errorMessage', 'value', 'validity', 'checkValidity'];\n\nexport function isFieldElement<T>(element: HTMLElement): element is FieldElement<T> {\n  return props.some((prop) => prop in element);\n}\n\ninterface FieldElementHolder<T> {\n  get element(): FieldElement<T>;\n\n  /**\n   * @param element - the new element value\n   * @deprecated will be read-only in future\n   */\n  set element(element: FieldElement<T>);\n}\n\ninterface Field<T> extends FieldBase<T> {\n  readonly model?: AbstractModel<T>;\n}\n\ninterface FieldState<T> extends Field<T>, FieldElementHolder<T> {\n  name: string;\n  validity: ValidityState;\n  strategy: FieldStrategy<T>;\n}\n\nexport type FieldStrategy<T = any> = Field<T> &\n  FieldConstraintValidation & {\n    removeEventListeners(): void;\n  };\n\nexport abstract class AbstractFieldStrategy<T = any, E extends FieldElement<T> = FieldElement<T>>\n  implements FieldStrategy<T>\n{\n  abstract required: boolean;\n\n  abstract invalid: boolean;\n\n  readonly model?: AbstractModel<T>;\n\n  #element: E;\n\n  /**\n   * @privateRemarks\n   * Fallback for missing .validity property API in Vaadin components.\n   */\n  #validityFallback: ValidityState = defaultValidity;\n\n  constructor(element: E, model?: AbstractModel<T>) {\n    this.#element = element;\n    this.model = model;\n  }\n\n  get element(): E {\n    return this.#element;\n  }\n\n  /**\n   * @param element - the new element value\n   * @deprecated will be read-only in future\n   */\n  set element(element: E) {\n    this.#element = element;\n  }\n\n  get value(): T | undefined {\n    return this.#element.value;\n  }\n\n  set value(value: T | undefined) {\n    if (this.model instanceof StringModel || this.model instanceof NumberModel) {\n      this.#element.value = value ?? ('' as T);\n      return;\n    }\n    this.#element.value = value;\n  }\n\n  set errorMessage(_: string) {}\n\n  get validity(): ValidityState {\n    return this.#element.validity ?? this.#validityFallback;\n  }\n\n  checkValidity(): boolean {\n    if (!this.#element.checkValidity) {\n      return true;\n    }\n\n    const valid = this.#element.checkValidity();\n    this.#validityFallback = {\n      ...defaultValidity,\n      valid,\n      ...(valid ? {} : this.#detectValidityError()),\n    };\n    return valid;\n  }\n\n  setAttribute(key: string, val: any): void {\n    if (val) {\n      this.#element.setAttribute(key, '');\n    } else {\n      this.#element.removeAttribute(key);\n    }\n  }\n\n  removeEventListeners(): void {}\n\n  #detectValidityError(): Readonly<Partial<ValidityState>> {\n    if (!('inputElement' in this.#element)) {\n      // Not a Vaadin component field\n      return { customError: true };\n    }\n\n    const inputElement = this.#element.inputElement as FieldElement<string>;\n\n    if (this.#element.value === '') {\n      if (inputElement.value === '') {\n        return { valueMissing: true };\n      }\n      // Some value is entered, but not meaningful to the\n      // web component \u2014 assume parse error.\n      return { badInput: true };\n    }\n    // Unknown constraint violation\n    return { customError: true };\n  }\n}\n\nexport class VaadinFieldStrategy<T = any, E extends FieldElement<T> = FieldElement<T>> extends AbstractFieldStrategy<\n  T,\n  E\n> {\n  #invalid = false;\n  readonly #boundOnValidated = this.#onValidated.bind(this);\n\n  constructor(element: E, model?: AbstractModel<T>) {\n    super(element, model);\n    element.addEventListener('validated', this.#boundOnValidated);\n  }\n\n  set required(value: boolean) {\n    this.element.required = value;\n  }\n\n  set invalid(value: boolean) {\n    this.#invalid = value;\n    this.element.invalid = value;\n  }\n\n  override set errorMessage(value: string) {\n    this.element.errorMessage = value;\n  }\n\n  override removeEventListeners(): void {\n    this.element.removeEventListener('validated', this.#boundOnValidated);\n  }\n\n  #onValidated(e: Event): void {\n    if (!(e instanceof CustomEvent) || typeof e.detail !== 'object') {\n      return;\n    }\n\n    // Override built-in changes of the `invalid` flag in Vaadin components\n    // to keep the `invalid` property state of the web component in sync.\n    const invalid = !(e.detail satisfies Partial<ValidityState> as Partial<ValidityState>).valid;\n    if (this.#invalid !== invalid) {\n      this.element.invalid = this.#invalid;\n    }\n  }\n\n  override checkValidity(): boolean {\n    // Ignore the `invalid` property of the Vaadin component to avoid\n    // reading the component's internal old validation state and validate\n    // the element based on the current state.\n    const isElementInvalid = this.element.invalid;\n    this.element.invalid = false;\n    const valid = super.checkValidity();\n    this.element.invalid = isElementInvalid;\n    return valid;\n  }\n}\n\nexport class GenericFieldStrategy<T = any, E extends FieldElement<T> = FieldElement<T>> extends AbstractFieldStrategy<\n  T,\n  E\n> {\n  set required(value: boolean) {\n    this.setAttribute('required', value);\n  }\n\n  set invalid(value: boolean) {\n    this.setAttribute('invalid', value);\n  }\n}\n\ntype CheckedFieldElement<T> = FieldElement<T> & {\n  checked: boolean;\n};\n\nexport class CheckedFieldStrategy<\n  T = any,\n  E extends CheckedFieldElement<T> = CheckedFieldElement<T>,\n> extends GenericFieldStrategy<T, E> {\n  override get value(): T | undefined {\n    if (this.model instanceof BooleanModel) {\n      return this.element.checked as T;\n    }\n\n    return this.element.checked ? this.element.value : undefined;\n  }\n\n  override set value(val: T | undefined) {\n    (this.element as { checked: boolean }).checked = /^(true|on)$/iu.test(String(val));\n  }\n}\n\nexport class CheckedGroupFieldStrategy<\n  T = any,\n  E extends FieldElement<T> = FieldElement<T>,\n> extends GenericFieldStrategy<T, E> {\n  override get value(): T | undefined {\n    return super.value;\n  }\n\n  override set value(val: T | undefined) {\n    super.value = val ?? ([] as T);\n  }\n}\n\ntype ComboBoxFieldElement<T> = FieldElement<T> & {\n  value: string;\n  selectedItem: T | null;\n};\n\nexport class ComboBoxFieldStrategy<\n  T,\n  E extends ComboBoxFieldElement<T> = ComboBoxFieldElement<T>,\n> extends VaadinFieldStrategy<T, E> {\n  override get value(): T | undefined {\n    if (this.model && (this.model instanceof ObjectModel || this.model instanceof ArrayModel)) {\n      const { selectedItem } = this.element;\n      return selectedItem ?? undefined;\n    }\n\n    return super.value;\n  }\n\n  override set value(val: T | undefined) {\n    if (this.model instanceof ObjectModel || this.model instanceof ArrayModel) {\n      this.element.selectedItem = val ?? null;\n    } else {\n      super.value = val;\n    }\n  }\n}\n\nexport class VaadinStringFieldStrategy extends VaadinFieldStrategy<string> {\n  override get value(): string | undefined {\n    return super.value;\n  }\n\n  override set value(val: string | undefined) {\n    // Some Vaadin components (e.g. vaadin-time-picker) do not support setting\n    // the value to `null` or `undefined`. Instead, set it to an empty string.\n    super.value = val ?? '';\n  }\n}\nfunction isEmptyObject(val: any): boolean {\n  return val && typeof val === 'object' && !Array.isArray(val) && Object.keys(val).length === 0;\n}\n\nexport class VaadinDateTimeFieldStrategy<\n  T = string,\n  E extends FieldElement<T> = FieldElement<T>,\n> extends VaadinFieldStrategy<T, E> {\n  override get value(): T | undefined {\n    return super.value;\n  }\n\n  override set value(val: T | undefined) {\n    const timestamp = Date.parse(val as string);\n\n    if (!val || isEmptyObject(val) || Number.isNaN(timestamp)) {\n      super.value = '' as T;\n      return;\n    }\n\n    const date = new Date(timestamp);\n    // Convert to ISO 8601 local combined date and time representation\n    const tzOffsetMs = 60 * 1000 * date.getTimezoneOffset();\n    super.value = new Date(timestamp - tzOffsetMs).toISOString().slice(0, 19) as T;\n  }\n}\n\ntype MultiSelectComboBoxFieldElement<T> = FieldElement<T> & {\n  value: never;\n  selectedItems: T;\n};\n\nexport class MultiSelectComboBoxFieldStrategy<\n  T,\n  E extends MultiSelectComboBoxFieldElement<T> = MultiSelectComboBoxFieldElement<T>,\n> extends VaadinFieldStrategy<T, E> {\n  override get value(): T {\n    return this.element.selectedItems;\n  }\n\n  override set value(val: any) {\n    this.element.selectedItems = val;\n  }\n}\n\ntype SelectedFieldElement<T> = FieldElement<T> & {\n  value: never;\n  selected: T;\n};\n\nexport class SelectedFieldStrategy<\n  T,\n  E extends SelectedFieldElement<T> = SelectedFieldElement<T>,\n> extends GenericFieldStrategy<T, E> {\n  override get value(): T {\n    return this.element.selected;\n  }\n\n  override set value(val: T) {\n    this.element.selected = val;\n  }\n}\n\ntype MaybeVaadinElementConstructor = {\n  readonly version?: string;\n};\n\nexport function getDefaultFieldStrategy<T>(elm: FieldElement<T>, model?: AbstractModel<T>): AbstractFieldStrategy<T> {\n  switch (elm.localName) {\n    case 'vaadin-checkbox':\n    case 'vaadin-radio-button':\n      return new CheckedFieldStrategy(elm as CheckedFieldElement<T>, model);\n    case 'vaadin-checkbox-group':\n      return new CheckedGroupFieldStrategy(elm, model);\n    case 'vaadin-combo-box':\n      return new ComboBoxFieldStrategy(elm as ComboBoxFieldElement<T>, model);\n    case 'vaadin-list-box':\n      return new SelectedFieldStrategy(elm as SelectedFieldElement<T>, model);\n    case 'vaadin-multi-select-combo-box':\n      return new MultiSelectComboBoxFieldStrategy(elm as MultiSelectComboBoxFieldElement<T>, model);\n    case 'vaadin-rich-text-editor':\n      return new GenericFieldStrategy(elm, model);\n    case 'vaadin-time-picker':\n      return new VaadinStringFieldStrategy(\n        elm as FieldElement<string>,\n        model as AbstractModel<string>,\n      ) as AbstractFieldStrategy<T>;\n    case 'vaadin-date-time-picker':\n      return new VaadinDateTimeFieldStrategy(elm, model) as AbstractFieldStrategy<T>;\n    default:\n      if (elm.localName === 'input' && /^(checkbox|radio)$/u.test((elm as unknown as HTMLInputElement).type)) {\n        return new CheckedFieldStrategy(elm as CheckedFieldElement<T>, model);\n      }\n      if ((elm.constructor as unknown as MaybeVaadinElementConstructor).version) {\n        return new VaadinFieldStrategy(elm, model);\n      }\n      return new GenericFieldStrategy(elm, model);\n  }\n}\n\nfunction convertFieldValue<T extends AbstractModel>(model: T, fieldValue: unknown) {\n  return typeof fieldValue === 'string' && hasFromString(model) ? model[_fromString](fieldValue) : fieldValue;\n}\n\n/**\n * Binds a form field component into a model.\n *\n * Example usage:\n *\n * ```\n * <vaadin-text-field ...=\"${field(model.name)}\">\n * </vaadin-text-field>\n * ```\n */\nexport const field = directive(\n  class extends Directive {\n    fieldState?: FieldState<any>;\n\n    constructor(partInfo: PartInfo) {\n      super(partInfo);\n      if (partInfo.type !== PartType.PROPERTY && partInfo.type !== PartType.ELEMENT) {\n        throw new Error('Use as \"<element {field(...)}\" or <element ...={field(...)}\"');\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    override render(_model: AbstractModel<any>, _effect?: (element: Element) => void) {\n      return nothing;\n    }\n\n    override update(part: ElementPart | PropertyPart, [model, effect]: DirectiveParameters<this>) {\n      const element = part.element as FieldElement & HTMLInputElement;\n\n      const binderNode = getBinderNode(model);\n\n      if (!this.fieldState) {\n        const fieldState = {\n          errorMessage: '',\n          name: '',\n          value: '',\n          required: false,\n          invalid: false,\n          model,\n          validity: defaultValidity,\n          element,\n          strategy: binderNode.binder.getFieldStrategy(element, model),\n        };\n\n        this.fieldState = fieldState;\n\n        const updateValueFromElement = () => {\n          fieldState.strategy.checkValidity();\n          // When bad input is detected, skip reading new value in binder state\n          if (!fieldState.strategy.validity.badInput) {\n            fieldState.value = fieldState.strategy.value;\n          }\n          fieldState.validity = fieldState.strategy.validity;\n          binderNode[_validity] = fieldState.validity;\n          binderNode.value = convertFieldValue(model, fieldState.value);\n          if (effect !== undefined) {\n            effect.call(element, element);\n          }\n        };\n\n        element.addEventListener('input', updateValueFromElement);\n\n        const changeBlurHandler = () => {\n          updateValueFromElement();\n          binderNode.visited = true;\n        };\n\n        element.addEventListener('blur', changeBlurHandler);\n        element.addEventListener('change', changeBlurHandler);\n      }\n\n      const { fieldState } = this;\n\n      if (fieldState.element !== element || fieldState.model !== model) {\n        fieldState.strategy = binderNode.binder.getFieldStrategy(element, model);\n      }\n\n      const { name } = binderNode;\n      if (name !== fieldState.name) {\n        fieldState.name = name;\n        element.setAttribute('name', name);\n      }\n\n      const { value } = binderNode;\n      const valueFromField = convertFieldValue(model, fieldState.value);\n      if (value !== valueFromField && !(Number.isNaN(value) && Number.isNaN(valueFromField))) {\n        const nonNanValue = Number.isNaN(value) ? '' : value;\n        fieldState.value = nonNanValue;\n        fieldState.strategy.value = nonNanValue;\n      }\n\n      const { required } = binderNode;\n      if (required !== fieldState.required) {\n        fieldState.required = required;\n        fieldState.strategy.required = required;\n      }\n\n      const firstError: ValueError<any> | undefined = binderNode.ownErrors[0];\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      const errorMessage = firstError?.message || '';\n      if (errorMessage !== fieldState.errorMessage) {\n        fieldState.errorMessage = errorMessage;\n        fieldState.strategy.errorMessage = errorMessage;\n      }\n\n      const { invalid } = binderNode;\n      if (invalid !== fieldState.invalid) {\n        fieldState.invalid = invalid;\n        fieldState.strategy.invalid = invalid;\n      }\n\n      return noChange;\n    }\n  },\n);\n", "import isNumeric from 'validator/es/lib/isNumeric.js';\nimport type { BinderNode } from './BinderNode.js';\nimport { getBinderNode } from './BinderNode.js';\nimport type { BinderRoot } from './BinderRoot.js';\nimport { AbstractModel, NumberModel, type Value } from './Models.js';\nimport { IsNumber, Required, ValidityStateValidator } from './Validators.js';\n\nexport interface ValueError<T = unknown> {\n  property: AbstractModel | string;\n  message: string;\n  value: T;\n  validator: Validator<T>;\n  validatorMessage?: string;\n}\n\nexport interface ValidationResult {\n  property: AbstractModel | string;\n  message?: string;\n}\n\nexport class ValidationError extends Error {\n  errors: readonly ValueError[];\n\n  constructor(errors: readonly ValueError[]) {\n    super(\n      [\n        'There are validation errors in the form.',\n        ...errors.map((e) => {\n          const property = e.property instanceof AbstractModel ? String(getBinderNode(e.property).value) : e.property;\n          return `${property} - ${e.validator.constructor.name}${e.message ? `: ${e.message}` : ''}`;\n        }),\n      ].join('\\n - '),\n    );\n    this.errors = errors;\n    this.name = this.constructor.name;\n  }\n}\n\nexport type InterpolateMessageCallback<M extends AbstractModel> = (\n  message: string,\n  validator: Validator<Value<M>>,\n  binderNode: BinderNode<M>,\n) => string;\n\nexport interface Validator<T = unknown> {\n  message: string;\n  impliesRequired?: boolean;\n  name?: string;\n  validate(\n    value: T,\n    binder: BinderRoot,\n  ):\n    | Promise<ValidationResult | boolean | readonly ValidationResult[]>\n    | ValidationResult\n    | boolean\n    | readonly ValidationResult[];\n}\n\nexport class ServerValidator implements Validator {\n  name = 'ServerValidator';\n  message: string;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n\n  validate = (): boolean => false;\n}\n\n// The `property` field of `ValidationResult`s is a path relative to the parent.\nfunction setPropertyAbsolutePath(binderNodeName: string, result: ValidationResult): ValidationResult {\n  if (typeof result.property === 'string' && binderNodeName.length > 0) {\n    result.property = `${binderNodeName}.${result.property}`;\n  }\n  return result;\n}\n\nexport async function runValidator<M extends AbstractModel>(\n  model: M,\n  validator: Validator<Value<M>>,\n  interpolateMessageCallback?: InterpolateMessageCallback<M>,\n): Promise<ReadonlyArray<ValueError<Value<M>>>> {\n  const binderNode = getBinderNode(model);\n  const value = binderNode.value as Value<M>;\n\n  const interpolateMessage = (message: string) => {\n    if (!interpolateMessageCallback) {\n      return message;\n    }\n    return interpolateMessageCallback(message, validator, binderNode);\n  };\n\n  // If model is not required and value empty, do not run any validator. Except\n  // always validate NumberModel, which has a mandatory builtin validator\n  // to indicate NaN input.\n  if (\n    !binderNode.required &&\n    !new Required().validate(value) &&\n    !(validator instanceof IsNumber) &&\n    !(validator instanceof ValidityStateValidator)\n  ) {\n    return [];\n  }\n\n  try {\n    const result = await validator.validate(value, binderNode.binder);\n\n    if (result === false) {\n      return [\n        {\n          message: interpolateMessage(validator.message),\n          property: binderNode.name,\n          validator,\n          value,\n        },\n      ];\n    }\n\n    if (result === true || (Array.isArray(result) && result.length === 0)) {\n      return [];\n    }\n\n    if (Array.isArray(result)) {\n      return result.map((result2) => ({\n        message: interpolateMessage(validator.message),\n        ...setPropertyAbsolutePath(binderNode.name, result2),\n        validator,\n        value,\n      }));\n    }\n\n    return [\n      {\n        message: interpolateMessage(validator.message),\n        ...setPropertyAbsolutePath(binderNode.name, result as ValidationResult),\n        validator,\n        value,\n      },\n    ];\n  } catch (error: unknown) {\n    console.error(`${binderNode.name} - Validator ${validator.constructor.name} threw an error:`, error);\n    return [{ message: 'Validator threw an error', property: binderNode.name, validator, value }];\n  }\n}\n", "import { EndpointValidationError, type ValidationErrorData } from '@vaadin/hilla-frontend/EndpointErrors.js';\nimport {\n  _clearValidation,\n  _setErrorsWithDescendants,\n  _update,\n  _updateValidation,\n  BinderNode,\n  CHANGED,\n} from './BinderNode.js';\nimport { type FieldElement, type FieldStrategy, getDefaultFieldStrategy } from './Field.js';\nimport {\n  _parent,\n  type AbstractModel,\n  createDetachedModel,\n  type DetachedModelConstructor,\n  type Value,\n} from './Models.js';\nimport type { ClassStaticProperties } from './types.js';\nimport {\n  type InterpolateMessageCallback,\n  runValidator,\n  ServerValidator,\n  ValidationError,\n  type Validator,\n  type ValueError,\n} from './Validation.js';\n\nexport type BinderConfiguration<T> = Readonly<{\n  onChange?(oldValue?: T): void;\n  onSubmit?(value: T): Promise<T | undefined | void>;\n}>;\n\nexport type BinderRootConfiguration<T> = BinderConfiguration<T> &\n  Readonly<{\n    context?: unknown;\n  }>;\n\n/**\n * A simplified Binder that does not require a context.\n * It can be used as root when there is no Element to use as context.\n *\n * @typeParam T - Type of the value that binds to a form\n * @typeParam M - Type of the model that describes the structure of the value\n */\nexport class BinderRoot<M extends AbstractModel = AbstractModel> extends BinderNode<M> {\n  static interpolateMessageCallback?: InterpolateMessageCallback<any>;\n\n  #defaultValue!: Value<M>; // Initialized in the `read()` method\n\n  #value!: Value<M>; // Initialized in the `read()` method\n\n  readonly #emptyValue: Value<M>;\n\n  #submitting = false;\n\n  #validating = false;\n\n  #validationRequest?: Promise<void>;\n\n  readonly #config?: BinderRootConfiguration<Value<M>>;\n\n  readonly #validations = new Map<AbstractModel, Map<Validator, Promise<readonly ValueError[]>>>();\n\n  readonly #context: unknown = this;\n\n  declare readonly ['constructor']: ClassStaticProperties<typeof BinderRoot<M>>;\n\n  /**\n   *\n   * @param Model - The constructor (the class reference) of the form model. The Binder instantiates the top-level model\n   * @param config - The options object, which can be used to config the onChange and onSubmit callbacks.\n   *\n   * ```\n   * binder = new BinderRoot(OrderModel);\n   * or\n   * binder = new BinderRoot(OrderModel, {onSubmit: async (order) => {endpoint.save(order)}});\n   * ```\n   */\n  constructor(Model: DetachedModelConstructor<M>, config?: BinderRootConfiguration<Value<M>>) {\n    super(createDetachedModel(Model));\n    // @ts-expect-error the model's parent is the binder\n    this.model[_parent] = this;\n    this.#context = config?.context ?? this;\n    this.#config = config;\n    // Initialize value instead of the parent.\n    this.initializeValue(true);\n    this.#emptyValue = this.value;\n  }\n\n  /**\n   * The initial value of the form, before any fields are edited by the user.\n   */\n  override get defaultValue(): Value<M> {\n    return this.#defaultValue;\n  }\n\n  override set defaultValue(newValue: Value<M>) {\n    this.#defaultValue = newValue;\n    this.dispatchEvent(CHANGED);\n  }\n\n  override get binder(): BinderRoot {\n    return this as BinderRoot;\n  }\n\n  /**\n   * The current value of the form.\n   */\n  override get value(): Value<M> {\n    return this.#value;\n  }\n\n  override set value(newValue: Value<M>) {\n    if (newValue === this.#value) {\n      return;\n    }\n\n    const oldValue = this.#value;\n    this.#value = newValue;\n    this[_update](oldValue);\n    this[_updateValidation]().catch(() => {});\n  }\n\n  /**\n   * Indicates the submitting status of the form.\n   * True if the form was submitted, but the submit promise is not resolved yet.\n   */\n  get submitting(): boolean {\n    return this.#submitting;\n  }\n\n  /**\n   * Indicates the validating status of the form.\n   * True when there is an ongoing validation.\n   */\n  get validating(): boolean {\n    return this.#validating;\n  }\n\n  /**\n   * Read the given value into the form and clear validation errors. Clears the form if the value is undefined.\n   *\n   * @param value - The value to read, or undefined to clear.\n   */\n  read(value: Value<M> | null | undefined): void {\n    if (value === undefined || value === null) {\n      this.clear();\n      return;\n    }\n    this.defaultValue = value;\n    if (\n      // Skip when no value is set yet (e.g., invoked from constructor)\n      this.value &&\n      // Clear validation state, then proceed if update is needed\n      this[_clearValidation]() &&\n      // When value is dirty, another update is coming from invoking the value\n      // setter below, so we skip this one to prevent duplicate updates\n      this.value === value\n    ) {\n      this[_update](this.value);\n    }\n\n    this.value = this.defaultValue;\n  }\n\n  /**\n   * Reset the form to the previous value\n   */\n  reset(): void {\n    this.read(this.#defaultValue);\n  }\n\n  /**\n   * Sets the form to empty value, as defined in the Model.\n   */\n  clear(): void {\n    this.read(this.#emptyValue);\n  }\n\n  /**\n   * Submit the current form value to a predefined\n   * onSubmit callback.\n   *\n   * It's a no-op if the onSubmit callback is undefined.\n   */\n  async submit(): Promise<Value<M> | undefined | void> {\n    const onSubmit = this.#config?.onSubmit;\n    if (onSubmit) {\n      return this.submitTo(onSubmit);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Submit the current form value to callback\n   *\n   * @param endpointMethod - the callback function\n   */\n  async submitTo<V>(endpointMethod: (value: Value<M>) => Promise<V>): Promise<V> {\n    const errors = await this.validate();\n    if (errors.length) {\n      throw new ValidationError(errors);\n    }\n\n    this.#submitting = true;\n    this[_update](this.value);\n    this.dispatchEvent(CHANGED);\n    try {\n      return await endpointMethod.call(this.#context, this.value);\n    } catch (error: unknown) {\n      if (error instanceof EndpointValidationError && error.validationErrorData.length) {\n        const valueErrors: Array<ValueError<any>> = [];\n        error.validationErrorData.forEach((data: ValidationErrorData) => {\n          const res =\n            /Object of type '(.+)' has invalid property '(.+)' with value '(.+)', validation error: '(.+)'/u.exec(\n              data.message,\n            );\n          const [property, value, message] = res ? res.splice(2) : [data.parameterName ?? '', undefined, data.message];\n          valueErrors.push({\n            message,\n            property,\n            validator: new ServerValidator(message),\n            value,\n            validatorMessage: data.validatorMessage,\n          });\n        });\n        this[_setErrorsWithDescendants](valueErrors);\n        throw new ValidationError(valueErrors);\n      }\n\n      throw error;\n    } finally {\n      this.#submitting = false;\n      this.defaultValue = this.value;\n      this[_update](this.value);\n    }\n  }\n\n  async requestValidation<NM extends AbstractModel>(\n    model: NM,\n    validator: Validator<Value<NM>>,\n  ): Promise<ReadonlyArray<ValueError<Value<NM>>>> {\n    let modelValidations: Map<Validator<Value<NM>>, Promise<ReadonlyArray<ValueError<Value<NM>>>>>;\n\n    if (this.#validations.has(model)) {\n      modelValidations = this.#validations.get(model) as Map<\n        Validator<Value<NM>>,\n        Promise<ReadonlyArray<ValueError<Value<NM>>>>\n      >;\n    } else {\n      modelValidations = new Map();\n      this.#validations.set(model, modelValidations);\n    }\n\n    await this.performValidation();\n\n    if (modelValidations.has(validator)) {\n      return modelValidations.get(validator)!;\n    }\n\n    const promise = runValidator(model, validator, this.constructor.interpolateMessageCallback);\n    modelValidations.set(validator, promise);\n    const valueErrors = await promise;\n\n    modelValidations.delete(validator);\n    if (modelValidations.size === 0) {\n      this.#validations.delete(model);\n    }\n    if (this.#validations.size === 0) {\n      this.completeValidation();\n    }\n\n    return valueErrors;\n  }\n\n  /**\n   * Determines and returns the field directive strategy for the bound element.\n   * Override to customise the binding strategy for a component.\n   * The Binder extends BinderNode, see the inherited properties and methods below.\n   *\n   * @param elm - the bound element\n   * @param model - the bound model\n   */\n  // eslint ignored to allow overriding\n  // eslint-disable-next-line @typescript-eslint/class-methods-use-this\n  getFieldStrategy<TField>(elm: HTMLElement, model?: AbstractModel<TField>): FieldStrategy {\n    return getDefaultFieldStrategy(elm as FieldElement, model);\n  }\n\n  protected performValidation(): Promise<void> | void {\n    if (!this.#validationRequest) {\n      this.#validating = true;\n      this.dispatchEvent(CHANGED);\n      this.#validationRequest = Promise.resolve().then(() => {\n        this.#validationRequest = undefined;\n      });\n    }\n    return this.#validationRequest;\n  }\n\n  protected completeValidation(): void {\n    this.#validating = false;\n    this.dispatchEvent(CHANGED);\n  }\n\n  protected override [_update](oldValue: Value<M>): void {\n    this.#config?.onChange?.call(this.#context, oldValue);\n    this.dispatchEvent(CHANGED);\n  }\n}\n", "import type { LitElement } from 'lit';\nimport { type BinderConfiguration, BinderRoot } from './BinderRoot.js';\nimport type { AbstractModel, DetachedModelConstructor, Value } from './Models.js';\n\n/**\n * A Binder controls all aspects of a single form.\n * Typically, it is used to get and set the form value,\n * access the form model, validate, reset, and submit the form.\n *\n * @typeParam T - Type of the value that binds to a form\n * @typeParam M - Type of the model that describes the structure of the value\n */\nexport class Binder<M extends AbstractModel> extends BinderRoot<M> {\n  declare readonly ['constructor']: Omit<typeof Binder<M>, 'constructor'>;\n\n  context: Element;\n\n  /**\n   *\n   * @param context - The form view component instance to update.\n   * @param Model - The constructor (the class reference) of the form model. The Binder instantiates the top-level model\n   * @param config - The options object, which can be used to config the onChange and onSubmit callbacks.\n   *\n   * ```\n   * binder = new Binder(orderView, OrderModel);\n   * or\n   * binder = new Binder(orderView, OrderModel, {onSubmit: async (order) => {endpoint.save(order)}});\n   * ```\n   */\n  constructor(context: Element, Model: DetachedModelConstructor<M>, config?: BinderConfiguration<Value<M>>) {\n    const changeCallback =\n      config?.onChange ??\n      (typeof (context as LitElement).requestUpdate === 'function'\n        ? () => (context as LitElement).requestUpdate()\n        : undefined);\n\n    super(Model, {\n      ...(config ?? {}),\n      onChange: changeCallback,\n      context,\n    });\n    this.context = context;\n  }\n}\n", "export function __REGISTER__(feature, vaadinObj = (window.Vaadin ??= {})) {\n  vaadinObj.registrations ??= [];\n  vaadinObj.registrations.push({\n    is: feature ? `${__NAME__}/${feature}` : __NAME__,\n    version: __VERSION__,\n  });\n}\n", "export * from './Binder.js';\nexport * from './BinderRoot.js';\nexport * from './BinderNode.js';\nexport * from './Field.js';\nexport * from './Models.js';\nexport * from './Validation.js';\nexport * from './Validators.js';\nexport * from './Validity.js';\n\n// @ts-expect-error: esbuild injection\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n__REGISTER__();\n"],
  "mappings": "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",
  "names": ["o", "includes", "_typeof", "o", "_typeof", "o", "_a", "_b", "_items", "_a", "_validators", "_b", "_c", "fieldState", "_value", "_a", "_b"]
}
