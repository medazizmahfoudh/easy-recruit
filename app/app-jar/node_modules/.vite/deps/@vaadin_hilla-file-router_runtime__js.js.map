{
  "version": 3,
  "sources": ["../../@vaadin/hilla-file-router/src/runtime/createRoute.ts", "../../@vaadin/hilla-react-auth/src/ProtectedRoute.tsx", "../../@vaadin/hilla-react-auth/src/useAuth.tsx", "../../../scripts/register.js", "../../@vaadin/hilla-react-auth/src/index.ts", "../../@vaadin/hilla-file-router/src/runtime/RouterConfigurationBuilder.ts", "../../@vaadin/hilla-file-router/src/shared/convertComponentNameToTitle.ts", "../../@vaadin/hilla-file-router/src/shared/transformTree.ts", "../../@vaadin/hilla-file-router/src/runtime/useViewConfig.ts", "../../@vaadin/hilla-react-signals/src/polyfills.ts", "../../@vaadin/hilla-react-signals/src/core.ts", "../../nanoid/url-alphabet/index.js", "../../nanoid/index.browser.js", "../../@vaadin/hilla-react-signals/src/events.ts", "../../@vaadin/hilla-react-signals/src/FullStackSignal.ts", "../../@vaadin/hilla-react-signals/src/ValueSignal.ts", "../../@vaadin/hilla-react-signals/src/NumberSignal.ts", "../../../scripts/register.js", "../../@vaadin/hilla-file-router/src/runtime/createMenuItems.ts"],
  "sourcesContent": ["import type { AgnosticRoute, Module } from '../types.js';\n\n/**\n * Create a single framework-agnostic route object. Later, it can be transformed into a framework-specific route object,\n * e.g., the one used by React Router.\n *\n * @param path - A route path segment.\n * @param children - An array of child routes.\n *\n * @returns A framework-agnostic route object.\n */\nexport function createRoute(path: string, flowLayout: boolean, children?: readonly AgnosticRoute[]): AgnosticRoute;\nexport function createRoute(\n  path: string,\n  flowLayout: boolean,\n  module: Module,\n  children?: readonly AgnosticRoute[],\n): AgnosticRoute;\nexport function createRoute(\n  path: string,\n  flowLayout: boolean,\n  module: Module,\n  children?: readonly AgnosticRoute[],\n): AgnosticRoute;\nexport function createRoute(\n  path: string,\n  flowLayout: boolean,\n  moduleOrChildren?: Module | readonly AgnosticRoute[],\n  children?: readonly AgnosticRoute[],\n): AgnosticRoute {\n  let module: Module | undefined;\n  if (Array.isArray(moduleOrChildren)) {\n    // eslint-disable-next-line no-param-reassign\n    children = moduleOrChildren;\n  } else {\n    module = moduleOrChildren as Module | undefined;\n  }\n\n  return {\n    path,\n    module,\n    children,\n    flowLayout,\n  };\n}\n", "import { useContext, type JSX } from 'react';\nimport type { RouteObject } from 'react-router-dom';\nimport { type IndexRouteObject, Navigate, type NonIndexRouteObject, useLocation } from 'react-router-dom';\nimport { type AccessProps, AuthContext } from './useAuth.js';\n\ntype CustomMetadata = Record<string, any>;\n\ntype HandleWithAuth = Readonly<{ handle?: AccessProps & CustomMetadata }>;\n\ntype Override<T, E> = E & Omit<T, keyof E>;\n\ntype IndexRouteObjectWithAuth = Override<IndexRouteObject, HandleWithAuth>;\ntype NonIndexRouteObjectWithAuth = Override<\n  Override<NonIndexRouteObject, HandleWithAuth>,\n  {\n    children?: RouteObjectWithAuth[];\n  }\n>;\nexport type RouteObjectWithAuth = IndexRouteObjectWithAuth | NonIndexRouteObjectWithAuth;\n\ninterface ProtectedRouteProps {\n  redirectPath: string;\n  access: AccessProps;\n  element: JSX.Element;\n}\n\nfunction ProtectedRoute({ redirectPath, access, element }: ProtectedRouteProps): JSX.Element | null {\n  const {\n    state: { initializing, loading, user },\n    hasAccess,\n  } = useContext(AuthContext);\n\n  const location = useLocation();\n\n  if (initializing || loading) {\n    return <div></div>;\n  }\n\n  if (!hasAccess(access)) {\n    return <Navigate to={redirectPath} state={{ from: location }} replace />;\n  }\n\n  return element;\n}\nProtectedRoute.type = 'ProtectedRoute'; // This is for copilot to recognize this\n\nfunction* traverse<T extends RouteObject>(routes: T[]): Generator<T, undefined, undefined> {\n  for (const route of routes) {\n    yield route;\n    if (route.children) {\n      yield* traverse(route.children as T[]);\n    }\n  }\n}\n\n/**\n * Adds protection to a single route that requires authentication.\n * These route should contain the {@link AccessProps.loginRequired} and/or\n * {@link AccessProps.rolesAllowed} property to get the protection. Route\n * without that property won't be protected.\n *\n * @param route - the route to protect\n * @param redirectPath - the path to redirect to if the route is protected\n * and the user is not authenticated.\n * @returns the route extended with protection if needed\n */\nexport function protectRoute(route: RouteObjectWithAuth, redirectPath: string = '/login'): RouteObjectWithAuth {\n  const { handle } = route;\n  const requiresAuth = handle?.loginRequired ?? handle?.requiresLogin ?? handle?.rolesAllowed?.length;\n\n  if (requiresAuth) {\n    route.element = (\n      <ProtectedRoute\n        redirectPath={redirectPath}\n        access={handle as AccessProps}\n        element={route.element as JSX.Element}\n      />\n    );\n  }\n\n  return route;\n}\n\n/**\n * Protects a route tree with {@link protectRoute} function.\n *\n * @param routes - the roots of the route tree that requires protection.\n * @param redirectPath - the path to redirect to if the route is\n * protected and the user is not authenticated.\n * @returns the protected route tree\n */\nexport function protectRoutes(routes: RouteObjectWithAuth[], redirectPath: string = '/login'): RouteObjectWithAuth[] {\n  for (const route of traverse(routes)) {\n    protectRoute(route, redirectPath);\n  }\n\n  return routes;\n}\n", "import {\n  login as _login,\n  type LoginOptions,\n  type LoginResult,\n  logout as _logout,\n  type LogoutOptions,\n  UnauthorizedResponseError,\n} from '@vaadin/hilla-frontend';\nimport { createContext, type Dispatch, useContext, useEffect, useReducer } from 'react';\n\ntype LoginFunction = (username: string, password: string) => Promise<LoginResult>;\ntype LogoutFunction = () => Promise<void>;\n\nconst LOGIN_FETCH = 'LOGIN_FETCH';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nconst LOGIN_FAILURE = 'LOGIN_FAILURE';\nconst LOGOUT = 'LOGOUT';\n\n/**\n * The type of the function that is used to get the authenticated user.\n */\nexport type GetUserFn<TUser> = () => Promise<TUser | undefined>;\n\ntype AuthState<TUser> = Readonly<{\n  initializing: boolean;\n  loading: boolean;\n  user?: TUser;\n  error?: string;\n  getAuthenticatedUser?: GetUserFn<TUser>;\n}>;\n\ntype LoginFetchAction = Readonly<{\n  type: typeof LOGIN_FETCH;\n}>;\n\ntype LoginSuccessAction = Readonly<{\n  user: unknown;\n  type: typeof LOGIN_SUCCESS;\n}>;\n\ntype LoginFailureAction = Readonly<{\n  error: string;\n  type: typeof LOGIN_FAILURE;\n}>;\n\ntype LoginActions = LoginFailureAction | LoginFetchAction | LoginSuccessAction;\n\ntype LogoutAction = Readonly<{\n  type: typeof LOGOUT;\n}>;\n\nfunction createAuthenticateThunk<TUser>(dispatch: Dispatch<LoginActions>, getAuthenticatedUser: GetUserFn<TUser>) {\n  async function authenticate() {\n    dispatch({ type: LOGIN_FETCH });\n\n    // Get user info from endpoint\n    const user = await getAuthenticatedUser().catch((error: unknown) => {\n      if (error instanceof UnauthorizedResponseError) {\n        // 401 response: the user is not authenticated\n        return undefined;\n      }\n\n      throw error;\n    });\n\n    if (user) {\n      dispatch({\n        user,\n        type: LOGIN_SUCCESS,\n      });\n    } else {\n      dispatch({\n        error: 'Not authenticated',\n        type: LOGIN_FAILURE,\n      });\n    }\n  }\n\n  return authenticate;\n}\n\nfunction createUnauthenticateThunk(dispatch: Dispatch<LogoutAction>) {\n  return () => {\n    dispatch({ type: LOGOUT });\n  };\n}\n\nconst initialState: AuthState<unknown> = {\n  initializing: true,\n  loading: false,\n};\n\nfunction reducer(state: AuthState<unknown>, action: LoginActions | LogoutAction) {\n  switch (action.type) {\n    case LOGIN_FETCH:\n      return {\n        initializing: false,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        initializing: false,\n        loading: false,\n        user: action.user,\n      };\n    case LOGIN_FAILURE:\n      return {\n        initializing: false,\n        loading: false,\n        error: action.error,\n      };\n    case LOGOUT:\n      return { initializing: false, loading: false };\n    default:\n      return state;\n  }\n}\n\n/**\n * The properties that can be used to control access to a route.\n * They can be added to the route type handler as properties.\n */\nexport type AccessProps = Readonly<{\n  /**\n   * If true, the user must be logged in to access the route.\n   */\n  loginRequired?: boolean;\n  /**\n   * If true, the user must be logged in to access the route.\n   *\n   * @deprecated Use `loginRequired` instead.\n   */\n  requiresLogin?: boolean;\n  /**\n   * The list of roles that are allowed to access the route.\n   */\n  rolesAllowed?: readonly [string, ...string[]];\n}>;\n\n/**\n * The type of the authentication hook.\n */\nexport type Authentication<TUser> = Readonly<{\n  state: AuthState<TUser>;\n  login: LoginFunction;\n  logout: LogoutFunction;\n  hasAccess(accessProps: AccessProps): boolean;\n}>;\n\n/**\n * The hook that can be used to get the authentication state.\n * It returns the state of the authentication.\n */\nexport const AuthContext = createContext<Authentication<unknown>>({\n  state: initialState,\n  login() {\n    throw new Error('AuthContext not initialized');\n  },\n  logout() {\n    throw new Error('AuthContext not initialized');\n  },\n  hasAccess(): boolean {\n    throw new Error('AuthContext not initialized');\n  },\n});\n\ninterface AuthConfig<TUser> {\n  getRoles?(user: TUser): readonly string[];\n}\n\ninterface AuthProviderProps<TUser> extends React.PropsWithChildren {\n  getAuthenticatedUser: GetUserFn<TUser>;\n  config?: AuthConfig<TUser>;\n}\n\ninterface UserWithRoles {\n  roles?: any;\n}\n\nconst getDefaultRoles = (user: unknown) => {\n  const userWithRoles = user as UserWithRoles;\n  return Array.isArray(userWithRoles.roles) ? userWithRoles.roles : [];\n};\n\nfunction AuthProvider<TUser>({ children, getAuthenticatedUser, config }: AuthProviderProps<TUser>) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const authenticate = createAuthenticateThunk(dispatch, getAuthenticatedUser);\n  const unauthenticate = createUnauthenticateThunk(dispatch);\n\n  async function login(username: string, password: string, options?: LoginOptions): Promise<LoginResult> {\n    const result = await _login(username, password, options);\n\n    if (!result.error) {\n      await authenticate();\n    }\n\n    return result;\n  }\n\n  async function logout(options?: LogoutOptions): Promise<void> {\n    await _logout(options);\n    unauthenticate();\n  }\n\n  function hasAccess({ loginRequired, requiresLogin, rolesAllowed }: AccessProps): boolean {\n    const requiresAuth = loginRequired ?? requiresLogin ?? rolesAllowed;\n    if (!requiresAuth) {\n      return true;\n    }\n\n    if (!state.user) {\n      return false;\n    }\n\n    if (rolesAllowed) {\n      const userRoles = config?.getRoles ? config.getRoles(state.user as TUser) : getDefaultRoles(state.user);\n      return rolesAllowed.some((allowedRole) => userRoles.includes(allowedRole));\n    }\n\n    return true;\n  }\n\n  useEffect(() => {\n    authenticate().catch(() => {\n      // Do nothing\n    });\n  }, []);\n\n  const auth = {\n    state,\n    login,\n    logout,\n    hasAccess,\n  };\n\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n}\n\nexport type AuthHook<TUser> = () => Authentication<TUser>;\n\n/**\n * The hook that can be used to authenticate the user.\n * It returns the state of the authentication and the functions\n * to authenticate and unauthenticate the user.\n */\nfunction useAuth<TUser>(): Authentication<TUser> {\n  return useContext(AuthContext) as Authentication<TUser>;\n}\n\ninterface AuthModule<TUser> {\n  AuthProvider: React.FC<React.PropsWithChildren>;\n  useAuth: AuthHook<TUser>;\n}\n\nexport function configureAuth<TUser>(\n  getAuthenticatedUser: GetUserFn<TUser>,\n  config?: AuthConfig<TUser>,\n): AuthModule<TUser> {\n  function PreconfiguredAuthProvider({ children }: React.PropsWithChildren) {\n    return (\n      <AuthProvider<TUser> getAuthenticatedUser={getAuthenticatedUser} config={config}>\n        {children}\n      </AuthProvider>\n    );\n  }\n\n  return {\n    AuthProvider: PreconfiguredAuthProvider,\n    useAuth: useAuth as AuthHook<TUser>,\n  };\n}\n", "export function __REGISTER__(feature, vaadinObj = (window.Vaadin ??= {})) {\n  vaadinObj.registrations ??= [];\n  vaadinObj.registrations.push({\n    is: feature ? `${__NAME__}/${feature}` : __NAME__,\n    version: __VERSION__,\n  });\n}\n", "export * from './ProtectedRoute.js';\nexport * from './useAuth.js';\n\n// @ts-expect-error: esbuild injection\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n__REGISTER__();\n", "/* eslint-disable @typescript-eslint/consistent-type-assertions */\nimport { protectRoute } from '@vaadin/hilla-react-auth';\nimport { type ComponentType, createElement } from 'react';\nimport {\n  createBrowserRouter,\n  type IndexRouteObject,\n  type NonIndexRouteObject,\n  type RouteObject,\n} from 'react-router-dom';\nimport { convertComponentNameToTitle } from '../shared/convertComponentNameToTitle.js';\nimport { transformTree } from '../shared/transformTree.js';\nimport type {\n  AgnosticRoute,\n  Module,\n  RouteModule,\n  RouterBuildOptions,\n  RouterConfiguration,\n  ViewConfig,\n} from '../types.js';\n\ninterface RouteBase {\n  path?: string;\n  children?: readonly this[];\n}\n\ntype RoutesModifier = (routes: readonly RouteObject[] | undefined) => readonly RouteObject[] | undefined;\n\nfunction isReactRouteModule(module?: Module): module is RouteModule<ComponentType> | undefined {\n  return module ? 'default' in module && typeof module.default === 'function' : true;\n}\n\ntype RouteTransformer<T> = (\n  original: RouteObject | undefined,\n  overriding: T | undefined,\n  children?: readonly RouteObject[],\n) => RouteObject | undefined;\n\nfunction createRouteEntry<T extends RouteBase>(route: T): readonly [key: string, value: T] {\n  return [`${route.path ?? ''}-${route.children ? 'n' : 'i'}`, route];\n}\n\nenum RouteHandleFlags {\n  FLOW_LAYOUT = 'flowLayout',\n  IGNORE_FALLBACK = 'ignoreFallback',\n}\n\nfunction hasRouteHandleFlag<T extends RouteHandleFlags>(\n  route: RouteObject,\n  flag: T,\n): route is { readonly handle: Readonly<Record<T, boolean>> } {\n  return typeof route.handle === 'object' && flag in route.handle && (route.handle as Record<T, boolean>)[flag];\n}\n\n/**\n * A builder for creating a Vaadin-specific router for React with\n * authentication and server routes support.\n */\nexport class RouterConfigurationBuilder {\n  readonly #modifiers: RoutesModifier[] = [];\n\n  /**\n   * Adds the given routes to the current list of routes. All the routes are\n   * deeply merged to preserve the path uniqueness.\n   *\n   * @param routes - A list of routes to add to the current list.\n   */\n  withReactRoutes(routes: readonly RouteObject[]): this {\n    return this.update(routes);\n  }\n\n  /**\n   * Adds the given file routes to the current list of routes. All the routes\n   * are transformed to React RouterObjects and deeply merged to preserve the\n   * path uniqueness.\n   *\n   * @param routes - A list of routes to add to the current list.\n   */\n  withFileRoutes(routes: readonly AgnosticRoute[]): this {\n    return this.update(routes, (original, added, children) => {\n      if (added) {\n        const { module, path, flowLayout } = added;\n        if (!isReactRouteModule(module)) {\n          throw new Error(`The module for the \"${path}\" section doesn't have the React component exported by default`);\n        }\n\n        const element = module?.default ? createElement(module.default) : undefined;\n        const handle = {\n          ...module?.config,\n          title: module?.config?.title ?? convertComponentNameToTitle(module?.default),\n          flowLayout: module?.config?.flowLayout ?? flowLayout,\n        };\n\n        if (path === '' && !children) {\n          return {\n            ...original,\n            element,\n            handle,\n            index: true,\n          } as IndexRouteObject;\n        }\n\n        return {\n          ...original,\n          path: module?.config?.route ?? path,\n          element,\n          children,\n          handle,\n        } as NonIndexRouteObject;\n      }\n\n      return original;\n    });\n  }\n\n  /**\n   * Adds the given server route element to each branch of the current list of\n   * routes.\n   *\n   * @param component - The React component to add to each branch of the\n   * current list of routes.\n   * @param config - An optional configuration that will be applied to\n   * each fallback component.\n   */\n  withFallback(component: ComponentType, config?: ViewConfig): this {\n    this.withLayout(component);\n\n    // Fallback adds two routes, so that the index (empty path) has a fallback too\n    const fallbackRoutes: readonly RouteObject[] = [\n      { path: '*', element: createElement(component), handle: config },\n      { index: true, element: createElement(component), handle: config },\n    ];\n\n    this.update(fallbackRoutes, (original, added, children) => {\n      if (original && !hasRouteHandleFlag(original, RouteHandleFlags.IGNORE_FALLBACK)) {\n        if (!children) {\n          return original;\n        }\n\n        const _fallback = [...fallbackRoutes];\n\n        if (children.some(({ path }) => path === '*')) {\n          _fallback.shift();\n        }\n\n        if (children.some(({ index: i, path }) => i ?? path?.includes('?'))) {\n          _fallback.pop();\n        }\n\n        return {\n          ...original,\n          children: [...children, ..._fallback],\n        } as RouteObject;\n      }\n\n      return added!;\n    });\n\n    return this;\n  }\n\n  /**\n   * Adds the layoutComponent as the parent layout to views with the flowLayouts ViewConfiguration set.\n   *\n   * @param layoutComponent - layout component to use, usually Flow\n   */\n  withLayout(layoutComponent: ComponentType): this {\n    this.#modifiers.push((originalRoutes: readonly RouteObject[] | undefined) => {\n      if (originalRoutes === undefined) {\n        return originalRoutes;\n      }\n      // Split the routes tree onto two subtrees with and without\n      // a server layout.\n      const [serverRoutesTree, clientRoutesTree]: [RouteObject[] | undefined, RouteObject[] | undefined] =\n        transformTree<readonly RouteObject[], [RouteObject[] | undefined, RouteObject[] | undefined]>(\n          originalRoutes,\n          (\n            routes: readonly RouteObject[],\n            next: (...nodes: readonly RouteObject[]) => [RouteObject[] | undefined, RouteObject[] | undefined],\n          ) =>\n            // Split single routes list onto two filtered lists\n            routes.reduce<[RouteObject[] | undefined, RouteObject[] | undefined]>(\n              ([serverRoutesList, clientRoutesList], route) => {\n                if (hasRouteHandleFlag(route, RouteHandleFlags.FLOW_LAYOUT)) {\n                  // Server layout is explicitly declared: move to the entire\n                  // route to the server list, taking also all the children.\n                  return [[...(serverRoutesList ?? []), route], clientRoutesList];\n                }\n                if (!route.children?.length) {\n                  // Leaf routes and empty layouts: move to the client list.\n                  return [serverRoutesList, [...(clientRoutesList ?? []), route]];\n                }\n                // Nested children: collect server and client subtrees, and\n                // copy the current route to either or both the server and\n                // the client lists with the respective subtree as children.\n                const [serverRouteSubtree, clientRouteSubtree] = next(...route.children);\n                return [\n                  serverRouteSubtree\n                    ? [\n                        ...(serverRoutesList ?? []),\n                        {\n                          ...route,\n                          children: serverRouteSubtree,\n                        },\n                      ]\n                    : serverRoutesList,\n                  clientRouteSubtree\n                    ? [\n                        ...(clientRoutesList ?? []),\n                        {\n                          ...route,\n                          children: clientRouteSubtree,\n                        },\n                      ]\n                    : clientRoutesList,\n                ];\n              },\n              [undefined, undefined],\n            ),\n        );\n\n      return [\n        // The server subtree is wrapped with the server layout component,\n        // which applies the top-level server layout to all matches.\n        ...(serverRoutesTree\n          ? [\n              {\n                element: createElement(layoutComponent),\n                children: serverRoutesTree,\n                handle: {\n                  [RouteHandleFlags.IGNORE_FALLBACK]: true,\n                },\n              },\n            ]\n          : []),\n        // The client route subtree is preserved without wrapping.\n        ...(clientRoutesTree ?? []),\n      ];\n    });\n    return this;\n  }\n\n  /**\n   * Protects all the routes that require authentication. For more details see\n   * {@link @vaadin/hilla-react-auth#protectRoutes} function.\n   *\n   * @param redirectPath - the path to redirect to if the route is protected\n   * and the user is not authenticated.\n   */\n  protect(redirectPath?: string): this {\n    this.update(undefined, (route, _, children) => {\n      const finalRoute = protectRoute(route!, redirectPath);\n      finalRoute.children = children as RouteObject[] | undefined;\n      return finalRoute;\n    });\n\n    return this;\n  }\n\n  update<T extends RouteBase>(routes: undefined, callback: RouteTransformer<undefined>): this;\n  update<T extends RouteBase>(routes: readonly T[], callback?: RouteTransformer<T>): this;\n  update<T extends RouteBase>(\n    routes: readonly T[] | undefined,\n    callback: RouteTransformer<T | undefined> = (original, overriding, children) =>\n      ({\n        ...original,\n        ...overriding,\n        children,\n      }) as RouteObject,\n  ): this {\n    this.#modifiers.push((existingRoutes) =>\n      transformTree<[readonly RouteObject[] | undefined, readonly T[] | undefined], readonly RouteObject[] | undefined>(\n        [existingRoutes, routes],\n        ([original, added], next) => {\n          if (original && added) {\n            const originalMap = new Map(original.map((route) => createRouteEntry(route)));\n            const addedMap = new Map(added.map((route) => createRouteEntry(route)));\n\n            const paths = new Set([...originalMap.keys(), ...addedMap.keys()]);\n\n            for (const path of paths) {\n              const originalRoute = originalMap.get(path);\n              const addedRoute = addedMap.get(path);\n\n              let route: RouteObject | undefined;\n              if (originalRoute && addedRoute) {\n                route = callback(originalRoute, addedRoute, next(originalRoute.children, addedRoute.children));\n              } else if (originalRoute) {\n                route = callback(originalRoute, undefined, next(originalRoute.children, undefined));\n              } else {\n                route = callback(undefined, addedRoute, next(undefined, addedRoute!.children));\n              }\n\n              if (route) {\n                originalMap.set(path, route);\n              }\n            }\n\n            return [...originalMap.values()];\n          } else if (original) {\n            return original\n              .map((route) => callback(route, undefined, next(route.children, undefined)))\n              .filter(Boolean) as readonly RouteObject[];\n          } else if (added) {\n            return added\n              .map((route) => callback(undefined, route, next(undefined, route.children)))\n              .filter(Boolean) as readonly RouteObject[];\n          }\n\n          return undefined;\n        },\n      ),\n    );\n    return this;\n  }\n\n  /**\n   * Builds the router with the current list of routes.\n   */\n  build(options?: RouterBuildOptions): RouterConfiguration {\n    const routes =\n      this.#modifiers.reduce<readonly RouteObject[] | undefined>((acc, mod) => mod(acc) ?? acc, undefined) ?? [];\n\n    return {\n      routes,\n      router: createBrowserRouter([...routes], { basename: new URL(document.baseURI).pathname, ...options }),\n    };\n  }\n}\n", "const viewPattern = /view/giu;\nconst upperCaseSplitPattern = /(?=[A-Z])/gu;\n\n/**\n * Converts the name of the component to a page title.\n *\n * @param component - The component to convert the name from.\n *\n * @returns The page title.\n */\nexport function convertComponentNameToTitle(component: unknown): string {\n  let name: string;\n\n  if (\n    component &&\n    (typeof component === 'object' || typeof component === 'function') &&\n    'name' in component &&\n    typeof component.name === 'string'\n  ) {\n    ({ name } = component);\n  } else {\n    name = String(component);\n  }\n\n  return name.replace(viewPattern, '').split(upperCaseSplitPattern).join(' ');\n}\n", "export function transformTree<T extends readonly unknown[], U>(\n  nodes: T,\n  transformer: (nodes: T, next: (...nodes: T) => U) => U,\n): U {\n  return transformer(nodes, (...n) => transformTree(n, transformer));\n}\n", "import type { UIMatch } from '@remix-run/router';\nimport { useMatches } from 'react-router-dom';\nimport type { ViewConfig } from '../types.js';\n\n/**\n * Hook to return the {@link ViewConfig} for the current route.\n */\nexport function useViewConfig<M extends ViewConfig>(): M | undefined {\n  const matches = useMatches() as ReadonlyArray<UIMatch<unknown, M>>;\n  return matches[matches.length - 1]?.handle;\n}\n", "// TODO: Remove this polyfill when we move to ECMA2024\ndeclare global {\n  interface PromiseConstructor {\n    withResolvers<T>(): {\n      resolve(value: T): void;\n      reject(reason?: unknown): void;\n      promise: Promise<T>;\n    };\n  }\n}\n\nif (!('withResolvers' in Promise)) {\n  // eslint-disable-next-line no-extend-native\n  Object.defineProperty(Promise, 'withResolvers', {\n    configurable: true,\n    value<T>() {\n      let resolve: (value: T) => void;\n      let reject: (reason?: unknown) => void;\n      const promise = new Promise<T>((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n      });\n      return { resolve: resolve!, reject: reject!, promise };\n    },\n  });\n}\n\nexport {};\n", "import { installAutoSignalTracking } from '@preact/signals-react/runtime';\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-call\ninstallAutoSignalTracking();\n\nexport * from '@preact/signals-react';\n", "export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n", "import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n", "import { nanoid } from 'nanoid';\nimport type { Simplify } from 'type-fest';\n\n/**\n * Creates a new state event type.\n */\ntype CreateStateEventType<V, T extends string, C extends Record<string, unknown> = Record<never, never>> = Simplify<\n  Readonly<{\n    id: string;\n    type: T;\n    value: V;\n    accepted: boolean;\n  }> &\n    Readonly<C>\n>;\n\n/**\n * A state event received from the server describing the current state of the\n * signal.\n */\nexport type SnapshotStateEvent<T> = CreateStateEventType<T, 'snapshot'>;\n\n/**\n * A state event defines a new value of the signal shared with the server. The\n */\nexport type SetStateEvent<T> = CreateStateEventType<T, 'set'>;\n\nexport function createSetStateEvent<T>(value: T): SetStateEvent<T> {\n  return {\n    id: nanoid(),\n    type: 'set',\n    value,\n    accepted: false,\n  };\n}\n\nexport type ReplaceStateEvent<T> = CreateStateEventType<T, 'replace', { expected: T }>;\n\nexport function createReplaceStateEvent<T>(expected: T, value: T): ReplaceStateEvent<T> {\n  return {\n    id: nanoid(),\n    type: 'replace',\n    value,\n    expected,\n    accepted: false,\n  };\n}\n\nexport type IncrementStateEvent = CreateStateEventType<number, 'increment'>;\n\nexport function createIncrementStateEvent(delta: number): IncrementStateEvent {\n  return {\n    id: nanoid(),\n    type: 'increment',\n    value: delta,\n    accepted: false,\n  };\n}\n\n/**\n * An object that describes the change of the signal state.\n */\nexport type StateEvent<T> = IncrementStateEvent | ReplaceStateEvent<T> | SetStateEvent<T> | SnapshotStateEvent<T>;\n", "import type { ActionOnLostSubscription, ConnectClient, Subscription } from '@vaadin/hilla-frontend';\nimport { nanoid } from 'nanoid';\nimport { computed, signal, Signal } from './core.js';\nimport { createSetStateEvent, type StateEvent } from './events.js';\n\nconst ENDPOINT = 'SignalsHandler';\n\n/**\n * An abstraction of a signal that tracks the number of subscribers, and calls\n * the provided `onSubscribe` and `onUnsubscribe` callbacks for the first\n * subscription and the last unsubscription, respectively.\n * @internal\n */\nexport abstract class DependencyTrackingSignal<T> extends Signal<T> {\n  readonly #onFirstSubscribe: () => void;\n  readonly #onLastUnsubscribe: () => void;\n\n  // -1 means to ignore the first subscription that is created internally in the\n  // FullStackSignal constructor.\n  #subscribeCount = -1;\n\n  protected constructor(value: T | undefined, onFirstSubscribe: () => void, onLastUnsubscribe: () => void) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (!(window as any).Vaadin?.featureFlags?.fullstackSignals) {\n      // Remove when removing feature flag\n      throw new Error(\n        `The Hilla Fullstack Signals API is currently considered experimental and may change in the future. To use it you need to explicitly enable it in Copilot or by adding com.vaadin.experimental.fullstackSignals=true to vaadin-featureflags.properties`,\n      );\n    }\n    super(value);\n    this.#onFirstSubscribe = onFirstSubscribe;\n    this.#onLastUnsubscribe = onLastUnsubscribe;\n  }\n\n  protected override S(node: unknown): void {\n    super.S(node);\n    if (this.#subscribeCount === 0) {\n      this.#onFirstSubscribe();\n    }\n    this.#subscribeCount += 1;\n  }\n\n  protected override U(node: unknown): void {\n    super.U(node);\n    this.#subscribeCount -= 1;\n    if (this.#subscribeCount === 0) {\n      this.#onLastUnsubscribe();\n    }\n  }\n}\n\n/**\n * An object that describes a data object to connect to the signal provider\n * service.\n */\nexport type ServerConnectionConfig = Readonly<{\n  /**\n   * The client instance to be used for communication.\n   */\n  client: ConnectClient;\n\n  /**\n   * The name of the signal provider service endpoint.\n   */\n  endpoint: string;\n\n  /**\n   * The name of the signal provider service method.\n   */\n  method: string;\n\n  /**\n   * Optional object with method call arguments to be sent to the endpoint\n   * method that provides the signal when subscribing to it.\n   */\n  params?: Record<string, unknown>;\n}>;\n\n/**\n * A server connection manager.\n */\nclass ServerConnection<T> {\n  readonly #id: string;\n  readonly #config: ServerConnectionConfig;\n  #subscription?: Subscription<StateEvent<T>>;\n\n  constructor(id: string, config: ServerConnectionConfig) {\n    this.#config = config;\n    this.#id = id;\n  }\n\n  get subscription() {\n    return this.#subscription;\n  }\n\n  connect() {\n    const { client, endpoint, method, params } = this.#config;\n\n    this.#subscription ??= client.subscribe(ENDPOINT, 'subscribe', {\n      providerEndpoint: endpoint,\n      providerMethod: method,\n      clientSignalId: this.#id,\n      params,\n    });\n\n    return this.#subscription;\n  }\n\n  async update(event: StateEvent<T>): Promise<void> {\n    await this.#config.client.call(ENDPOINT, 'update', {\n      clientSignalId: this.#id,\n      event,\n    });\n  }\n\n  disconnect() {\n    this.#subscription?.cancel();\n    this.#subscription = undefined;\n  }\n}\n\nexport const $update = Symbol('update');\nexport const $processServerResponse = Symbol('processServerResponse');\n\n/**\n * A signal that holds a shared value. Each change to the value is propagated to\n * the server-side signal provider. At the same time, each change received from\n * the server-side signal provider is propagated to the local signal and it's\n * subscribers.\n *\n * @internal\n */\nexport abstract class FullStackSignal<T> extends DependencyTrackingSignal<T> {\n  /**\n   * The unique identifier of the signal necessary to communicate with the\n   * server.\n   */\n  readonly id = nanoid();\n\n  /**\n   * The server connection manager.\n   */\n  readonly server: ServerConnection<T>;\n\n  /**\n   * Defines whether the signal is currently awaits a server-side response.\n   */\n  readonly pending = computed(() => this.#pending.value);\n\n  /**\n   * Defines whether the signal has an error.\n   */\n  readonly error = computed(() => this.#error.value);\n\n  readonly #pending = signal(false);\n  readonly #error = signal<Error | undefined>(undefined);\n\n  // Paused at the very start to prevent the signal from sending the initial\n  // value to the server.\n  #paused = true;\n\n  constructor(value: T | undefined, config: ServerConnectionConfig) {\n    super(\n      value,\n      () => this.#connect(),\n      () => this.#disconnect(),\n    );\n    this.server = new ServerConnection(this.id, config);\n\n    this.subscribe((v) => {\n      if (!this.#paused) {\n        this.#pending.value = true;\n        this.#error.value = undefined;\n        this[$update](createSetStateEvent(v));\n      }\n    });\n\n    this.#paused = false;\n  }\n\n  /**\n   * Sets the local value of the signal without sending any events to the server\n   * @param value - The new value.\n   * @internal\n   */\n  protected setValueLocal(value: T): void {\n    this.#paused = true;\n    this.value = value;\n    this.#paused = false;\n  }\n\n  /**\n   * A method to update the server with the new value.\n   *\n   * @param event - The event to update the server with.\n   */\n  protected [$update](event: StateEvent<T>): void {\n    this.server\n      .update(event)\n      .catch((error: unknown) => {\n        this.#error.value = error instanceof Error ? error : new Error(String(error));\n      })\n      .finally(() => {\n        this.#pending.value = false;\n      });\n  }\n\n  /**\n   * A method with to process the server response. The implementation is\n   * specific for each signal type.\n   *\n   * @param event - The server response event.\n   */\n  protected abstract [$processServerResponse](event: StateEvent<T>): void;\n\n  #connect() {\n    this.server\n      .connect()\n      .onSubscriptionLost(() => 'resubscribe' as ActionOnLostSubscription)\n      .onNext((event: StateEvent<T>) => {\n        this.#paused = true;\n        this[$processServerResponse](event);\n        this.#paused = false;\n      });\n  }\n\n  #disconnect() {\n    if (this.server.subscription === undefined) {\n      return;\n    }\n    this.server.disconnect();\n  }\n}\n", "import { createReplaceStateEvent, type StateEvent } from './events.js';\nimport { $processServerResponse, $update, FullStackSignal } from './FullStackSignal.js';\n\ntype PromiseWithResolvers = ReturnType<typeof Promise.withResolvers<void>>;\ntype PendingRequestsRecord<T> = Readonly<{\n  waiter: PromiseWithResolvers;\n  callback(value: T): T;\n  canceled: boolean;\n}>;\n\n/**\n * An operation subscription that can be canceled.\n */\nexport interface OperationSubscription {\n  cancel(): void;\n}\n\n/**\n * A full-stack signal that holds an arbitrary value.\n */\nexport class ValueSignal<T> extends FullStackSignal<T> {\n  readonly #pendingRequests = new Map<string, PendingRequestsRecord<T>>();\n\n  /**\n   * Sets the value.\n   * Note that the value change event that is propagated to the server as the\n   * result of this operation is not taking the last seen value into account and\n   * will overwrite the shared value on the server unconditionally (AKA: \"Last\n   * Write Wins\"). If you need to perform a conditional update, use the\n   * `replace` method instead.\n   *\n   * @param value - The new value.\n   */\n  set(value: T): void {\n    this.value = value;\n  }\n\n  /**\n   * Replaces the value with a new one only if the current value is equal to the\n   * expected value.\n   *\n   * @param expected - The expected value.\n   * @param newValue - The new value.\n   */\n  replace(expected: T, newValue: T): void {\n    this[$update](createReplaceStateEvent(expected, newValue));\n  }\n\n  /**\n   * Tries to update the value by applying the callback function to the current\n   * value. In case of a concurrent change, the callback is run again with an\n   * updated input value. This is repeated until the result can be applied\n   * without concurrent changes, or the operation is canceled.\n   *\n   * Note that there is no guarantee that cancel() will be effective always,\n   * since a succeeding operation might already be on its way to the server.\n   *\n   * @param callback - The function that is applied on the current value to\n   *                   produce the new value.\n   * @returns An operation subscription that can be canceled.\n   */\n  update(callback: (value: T) => T): OperationSubscription {\n    const newValue = callback(this.value);\n    const event = createReplaceStateEvent(this.value, newValue);\n    this[$update](event);\n    const waiter = Promise.withResolvers<void>();\n    const pendingRequest = { callback, waiter, canceled: false };\n    this.#pendingRequests.set(event.id, pendingRequest);\n    return {\n      cancel: () => {\n        pendingRequest.canceled = true;\n        pendingRequest.waiter.resolve();\n      },\n    };\n  }\n\n  protected override [$processServerResponse](event: StateEvent<T>): void {\n    const record = this.#pendingRequests.get(event.id);\n    if (record) {\n      this.#pendingRequests.delete(event.id);\n    }\n\n    if (!event.accepted && record) {\n      if (!record.canceled) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.update(record.callback);\n      }\n    }\n\n    if (event.accepted || event.type === 'snapshot') {\n      if (record) {\n        record.waiter.resolve();\n      }\n      this.#applyAcceptedEvent(event);\n    }\n  }\n\n  #applyAcceptedEvent(event: StateEvent<T>): void {\n    if (event.type === 'set' || event.type === 'snapshot') {\n      this.value = event.value;\n    } else if (event.type === 'replace') {\n      if (JSON.stringify(this.value) === JSON.stringify(event.expected)) {\n        this.value = event.value;\n      }\n    }\n  }\n}\n", "import { createIncrementStateEvent, type StateEvent } from './events.js';\nimport { $processServerResponse, $update } from './FullStackSignal.js';\nimport { ValueSignal } from './ValueSignal.js';\n\n/**\n * A signal that holds a number value. The underlying\n * value of this signal is stored and updated as a\n * shared value on the server.\n *\n * After obtaining the NumberSignal instance from\n * a server-side service that returns one, the value\n * can be updated using the `value` property,\n * and it can be read with or without the\n * `value` property (similar to a normal signal):\n *\n * @example\n * ```tsx\n *  const counter = CounterService.counter();\n *\n * return (\n *    <Button onClick={() => counter.incrementBy(1)}>\n *      Click count: { counter }\n *    </Button>\n *    <Button onClick={() => counter.value = 0}>Reset</Button>\n * );\n * ```\n */\nexport class NumberSignal extends ValueSignal<number> {\n  readonly #sentIncrementEvents = new Map<string, StateEvent<number>>();\n  /**\n   * Increments the value by the specified delta. The delta can be negative to\n   * decrease the value.\n   *\n   * This method differs from using the `++` or `+=` operators directly on the\n   * signal value. It performs an atomic operation to prevent conflicts from\n   * concurrent changes, ensuring that other users' modifications are not\n   * accidentally overwritten.\n   *\n   * @param delta - The delta to increment the value by. The delta can be\n   * negative.\n   */\n  incrementBy(delta: number): void {\n    if (delta === 0) {\n      return;\n    }\n    this.setValueLocal(this.value + delta);\n    const event = createIncrementStateEvent(delta);\n    this.#sentIncrementEvents.set(event.id, event);\n    this[$update](event);\n  }\n\n  protected override [$processServerResponse](event: StateEvent<number>): void {\n    if (event.accepted && event.type === 'increment') {\n      if (this.#sentIncrementEvents.has(event.id)) {\n        this.#sentIncrementEvents.delete(event.id);\n        return;\n      }\n      this.setValueLocal(this.value + event.value);\n    } else {\n      super[$processServerResponse](event);\n    }\n  }\n}\n", "export function __REGISTER__(feature, vaadinObj = (window.Vaadin ??= {})) {\n  vaadinObj.registrations ??= [];\n  vaadinObj.registrations.push({\n    is: feature ? `${__NAME__}/${feature}` : __NAME__,\n    version: __VERSION__,\n  });\n}\n", "import { signal } from '@vaadin/hilla-react-signals';\nimport type { VaadinWindow } from '../shared/internal.js';\nimport type { MenuItem, ViewConfig } from '../types.js';\n\nexport const viewsSignal = signal((window as VaadinWindow).Vaadin?.views);\n\n/**\n * Creates menu items from the views provided by the server. The views are sorted according to the\n * {@link ViewConfig.menu.order}, filtered out if they are explicitly excluded via {@link ViewConfig.menu.exclude}.\n * Note that views with no order are put below views with an order. Ties are resolved based on the path string\n * comparison.\n *\n * @returns A list of menu items.\n */\nexport function createMenuItems(): readonly MenuItem[] {\n  // @ts-expect-error: esbuild injection\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  __REGISTER__('createMenuItems', (window as VaadinWindow).Vaadin);\n  const collator = new Intl.Collator('en-US');\n  if (!viewsSignal.value) {\n    return [];\n  }\n\n  return (\n    Object.entries(viewsSignal.value)\n      // Filter out the views that are explicitly excluded from the menu.\n      .filter(([_, value]) => !value.menu?.exclude)\n      // Map the views to menu items.\n      .map(([path, config]) => ({\n        to: path,\n        icon: config.menu?.icon,\n        title: config.menu?.title ?? config.title,\n        order: config.menu?.order,\n      }))\n      // Sort views according to the order specified in the view configuration.\n      .sort((menuA, menuB) => {\n        const ordersDiff = (menuA.order ?? Number.MAX_VALUE) - (menuB.order ?? Number.MAX_VALUE);\n        return ordersDiff !== 0 ? ordersDiff : collator.compare(menuA.to, menuB.to);\n      })\n  );\n}\n\n// @ts-expect-error Vite hotswapping\nif (import.meta.hot) {\n  // @ts-expect-error Vite hotswapping\n  // eslint-disable-next-line\n  import.meta.hot.on('fs-route-update', () => {\n    fetch('?v-r=routeinfo')\n      .then(async (resp) => resp.json())\n      .then((json) => {\n        viewsSignal.value = json;\n      })\n      .catch((e) => {\n        console.error('Failed to fetch route info', e);\n      });\n  });\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_runtime", "import_react", "_a", "import_react", "n", "RouteHandleFlags", "_a", "_", "_a", "_a", "__REGISTER__", "_", "_a"]
}
