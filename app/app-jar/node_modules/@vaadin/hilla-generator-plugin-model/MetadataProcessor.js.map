{
  "version": 3,
  "sources": ["src/MetadataProcessor.ts"],
  "sourcesContent": ["import type { Schema } from '@vaadin/hilla-generator-core/Schema.js';\nimport ts, { type ObjectLiteralExpression, type PropertyAssignment } from 'typescript';\n\ninterface Annotation {\n  name: string;\n  attributes?: Record<string, unknown>;\n}\n\nexport type SchemaWithMetadata = Schema & {\n  'x-annotations'?: Annotation[];\n  'x-java-type'?: string;\n};\n\nfunction createAnnotationsProperty(schema: SchemaWithMetadata): PropertyAssignment | null {\n  const annotations = schema['x-annotations'];\n  const hasAnnotations = annotations && annotations.length > 0;\n  if (!hasAnnotations) {\n    return null;\n  }\n\n  const annotationLiterals = annotations.map((annotation) =>\n    ts.factory.createObjectLiteralExpression([\n      ts.factory.createPropertyAssignment('name', ts.factory.createStringLiteral(annotation.name)),\n    ]),\n  );\n\n  return ts.factory.createPropertyAssignment(\n    'annotations',\n    ts.factory.createArrayLiteralExpression(annotationLiterals),\n  );\n}\n\nfunction createJavaTypeProperty(schema: SchemaWithMetadata): PropertyAssignment | null {\n  const javaType = schema['x-java-type'];\n  if (!javaType) {\n    return null;\n  }\n\n  return ts.factory.createPropertyAssignment('javaType', ts.factory.createStringLiteral(javaType));\n}\n\nexport function process(schema: Schema): ObjectLiteralExpression | null {\n  const schemaWithMetadata = schema as SchemaWithMetadata;\n\n  const properties = [createAnnotationsProperty(schemaWithMetadata), createJavaTypeProperty(schemaWithMetadata)].filter(\n    Boolean,\n  ) as PropertyAssignment[];\n\n  if (properties.length === 0) {\n    return null;\n  }\n\n  return ts.factory.createObjectLiteralExpression(properties);\n}\n"],
  "mappings": "AACA,OAAO,YAAmE;AAY1E,SAAS,0BAA0B,QAAuD;AACxF,QAAM,cAAc,OAAO,eAAe;AAC1C,QAAM,iBAAiB,eAAe,YAAY,SAAS;AAC3D,MAAI,CAAC,gBAAgB;AACnB,WAAO;AAAA,EACT;AAEA,QAAM,qBAAqB,YAAY;AAAA,IAAI,CAAC,eAC1C,GAAG,QAAQ,8BAA8B;AAAA,MACvC,GAAG,QAAQ,yBAAyB,QAAQ,GAAG,QAAQ,oBAAoB,WAAW,IAAI,CAAC;AAAA,IAC7F,CAAC;AAAA,EACH;AAEA,SAAO,GAAG,QAAQ;AAAA,IAChB;AAAA,IACA,GAAG,QAAQ,6BAA6B,kBAAkB;AAAA,EAC5D;AACF;AAEA,SAAS,uBAAuB,QAAuD;AACrF,QAAM,WAAW,OAAO,aAAa;AACrC,MAAI,CAAC,UAAU;AACb,WAAO;AAAA,EACT;AAEA,SAAO,GAAG,QAAQ,yBAAyB,YAAY,GAAG,QAAQ,oBAAoB,QAAQ,CAAC;AACjG;AAEO,SAAS,QAAQ,QAAgD;AACtE,QAAM,qBAAqB;AAE3B,QAAM,aAAa,CAAC,0BAA0B,kBAAkB,GAAG,uBAAuB,kBAAkB,CAAC,EAAE;AAAA,IAC7G;AAAA,EACF;AAEA,MAAI,WAAW,WAAW,GAAG;AAC3B,WAAO;AAAA,EACT;AAEA,SAAO,GAAG,QAAQ,8BAA8B,UAAU;AAC5D;",
  "names": []
}
