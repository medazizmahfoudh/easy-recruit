import { IntlMessageFormat } from "intl-messageformat";
class FormatCache {
  #language;
  #formats = /* @__PURE__ */ new Map();
  constructor(language) {
    let supportedLocales = [];
    try {
      supportedLocales = Intl.NumberFormat.supportedLocalesOf(language);
    } catch (e) {
    }
    this.#language = supportedLocales.length > 0 ? supportedLocales[0] : navigator.language;
  }
  getFormat(translation) {
    let format = this.#formats.get(translation);
    if (!format) {
      format = new IntlMessageFormat(translation, this.#language);
      this.#formats.set(translation, format);
    }
    return format;
  }
}
export {
  FormatCache
};
//# sourceMappingURL=FormatCache.js.map
