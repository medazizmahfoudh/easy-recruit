class DefaultBackend {
  async loadTranslations(language, chunks) {
    const params = new URLSearchParams([
      ["v-r", "i18n"],
      ["langtag", language],
      ...(chunks ?? []).map((chunk) => ["chunks", chunk])
    ]);
    const response = await fetch(`./?${params.toString()}`);
    if (!response.ok) {
      throw new Error("Failed fetching translations.");
    }
    const retrievedLocale = response.headers.get("X-Vaadin-Retrieved-Locale");
    const translations = await response.json();
    return {
      translations,
      resolvedLanguage: retrievedLocale ?? void 0
    };
  }
}
export {
  DefaultBackend
};
//# sourceMappingURL=backend.js.map
