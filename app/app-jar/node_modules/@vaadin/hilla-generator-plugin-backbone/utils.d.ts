import { type AllOfRuleComposedSchema, type Schema } from '@vaadin/hilla-generator-core/Schema.js';
export declare const defaultMediaType = "application/json";
export type SchemaWithTypeArguments = Readonly<{
    'x-type-arguments': AllOfRuleComposedSchema;
}> & Schema;
export type SchemaWithTypeParameters = Readonly<{
    'x-type-parameters': Schema[];
}> & Schema;
export type SchemaWithTypeVariable = Readonly<{
    'x-type-variable': string;
}> & Schema;
export declare function isSchemaWithTypeArguments(schema: Schema): schema is SchemaWithTypeArguments;
export declare function isSchemaWithTypeParameters(schema: Schema): schema is SchemaWithTypeParameters;
export declare function isSchemaWithTypeVariable(schema: Schema): schema is SchemaWithTypeVariable;
export declare function findTypeArguments(schema: Schema): AllOfRuleComposedSchema | undefined;
export declare function findTypeParameters(schema: Schema): readonly Schema[] | undefined;
export declare function findTypeVariable(schema: Schema): string | undefined;
//# sourceMappingURL=utils.d.ts.map