import {
  isAnyOfRuleComposedSchema
} from "@vaadin/hilla-generator-core/Schema.js";
const defaultMediaType = "application/json";
function isSchemaWithTypeArguments(schema) {
  return "x-type-arguments" in schema;
}
function isSchemaWithTypeParameters(schema) {
  return "x-type-parameters" in schema;
}
function isSchemaWithTypeVariable(schema) {
  return "x-type-variable" in schema;
}
function findTypeArguments(schema) {
  if (isSchemaWithTypeArguments(schema)) {
    return schema["x-type-arguments"];
  }
  if (isAnyOfRuleComposedSchema(schema)) {
    return schema.anyOf.find(isSchemaWithTypeArguments)?.["x-type-arguments"];
  }
  return void 0;
}
function findTypeParameters(schema) {
  if (isSchemaWithTypeParameters(schema)) {
    return schema["x-type-parameters"];
  }
  return void 0;
}
function findTypeVariable(schema) {
  if (isSchemaWithTypeVariable(schema)) {
    return schema["x-type-variable"];
  }
  return void 0;
}
export {
  defaultMediaType,
  findTypeArguments,
  findTypeParameters,
  findTypeVariable,
  isSchemaWithTypeArguments,
  isSchemaWithTypeParameters,
  isSchemaWithTypeVariable
};
//# sourceMappingURL=utils.js.map
