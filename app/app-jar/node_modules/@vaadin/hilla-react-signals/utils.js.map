{
  "version": 3,
  "sources": ["src/utils.ts"],
  "sourcesContent": ["import type { ReadonlySignal } from '@preact/signals-react';\n\nexport async function createPromiseFromSignal<T, U, E>(\n  signal: ReadonlySignal<T>,\n  callback: (value: T, resolve: (value: PromiseLike<U> | U) => void, reject: (reason?: E) => void) => void,\n): Promise<U> {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = signal.subscribe((value) => {\n      if (!value) {\n        return;\n      }\n\n      unsubscribe();\n      callback(value, resolve, reject);\n    });\n  });\n}\n"],
  "mappings": "AAEA,eAAsB,wBACpB,QACA,UACY;AACZ,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,cAAc,OAAO,UAAU,CAAC,UAAU;AAC9C,UAAI,CAAC,OAAO;AACV;AAAA,MACF;AAEA,kBAAY;AACZ,eAAS,OAAO,SAAS,MAAM;AAAA,IACjC,CAAC;AAAA,EACH,CAAC;AACH;",
  "names": []
}
