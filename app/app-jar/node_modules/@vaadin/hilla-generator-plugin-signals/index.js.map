{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import Plugin from '@vaadin/hilla-generator-core/Plugin.js';\nimport type SharedStorage from '@vaadin/hilla-generator-core/SharedStorage.js';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport SignalProcessor from './SignalProcessor.js';\n\n// Polyfill for iterator helpers (Stage 3 proposal)\nif (!('Iterator' in globalThis)) {\n  const { installIntoGlobal } = await import('iterator-helpers-polyfill');\n  installIntoGlobal();\n}\n\nexport type PathSignalType = Readonly<{\n  path: string;\n  signalType: string;\n}>;\n\nconst SIGNAL_CLASSES = [\n  '#/components/schemas/com.vaadin.hilla.signals.NumberSignal',\n  '#/components/schemas/com.vaadin.hilla.signals.ValueSignal',\n];\n\nfunction extractEndpointMethodsWithSignalsAsReturnType(storage: SharedStorage): PathSignalType[] {\n  return Object.entries(storage.api.paths)\n    .filter(([_, pathObject]) => {\n      const response200 = pathObject?.post?.responses['200'];\n      return response200 && !('$ref' in response200);\n    })\n    .flatMap(([path, pathObject]) => {\n      const response200 = pathObject?.post?.responses['200'];\n      const responseSchema = (response200 as OpenAPIV3.ResponseObject).content?.['application/json']?.schema;\n\n      return responseSchema && 'anyOf' in responseSchema\n        ? responseSchema.anyOf\n            ?.filter((c) => '$ref' in c && c.$ref && SIGNAL_CLASSES.includes(c.$ref))\n            .map((c: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject) => ({\n              path,\n              signalType: '$ref' in c ? c.$ref : '',\n            }))\n        : [];\n    })\n    .filter((signalArray) => signalArray != null);\n}\n\nfunction groupByService(signals: readonly PathSignalType[]): Map<string, Map<string, string>> {\n  return signals.reduce((serviceMap, signal) => {\n    const [_, service, method] = signal.path.split('/');\n    const serviceMethods = serviceMap.get(service) ?? new Map<string, string>();\n    serviceMethods.set(method, signal.signalType);\n    serviceMap.set(service, serviceMethods);\n    return serviceMap;\n  }, new Map<string, Map<string, string>>());\n}\n\nexport default class SignalsPlugin extends Plugin {\n  // eslint-disable-next-line @typescript-eslint/require-await\n  override async execute(sharedStorage: SharedStorage): Promise<void> {\n    const methodsWithSignals = extractEndpointMethodsWithSignalsAsReturnType(sharedStorage);\n    const services = groupByService(methodsWithSignals);\n    services.forEach((methods, service) => {\n      const index = sharedStorage.sources.findIndex((source) => source.fileName === `${service}.ts`);\n      if (index >= 0) {\n        sharedStorage.sources[index] = new SignalProcessor(\n          service,\n          methods,\n          sharedStorage.sources[index],\n          this,\n        ).process();\n      }\n    });\n  }\n\n  declare ['constructor']: typeof SignalsPlugin;\n\n  override get path(): string {\n    return import.meta.url;\n  }\n}\n"],
  "mappings": "AAAA,OAAO,YAAY;AAGnB,OAAO,qBAAqB;AAG5B,IAAI,EAAE,cAAc,aAAa;AAC/B,QAAM,EAAE,kBAAkB,IAAI,MAAM,OAAO,2BAA2B;AACtE,oBAAkB;AACpB;AAOA,MAAM,iBAAiB;AAAA,EACrB;AAAA,EACA;AACF;AAEA,SAAS,8CAA8C,SAA0C;AAC/F,SAAO,OAAO,QAAQ,QAAQ,IAAI,KAAK,EACpC,OAAO,CAAC,CAAC,GAAG,UAAU,MAAM;AAC3B,UAAM,cAAc,YAAY,MAAM,UAAU,KAAK;AACrD,WAAO,eAAe,EAAE,UAAU;AAAA,EACpC,CAAC,EACA,QAAQ,CAAC,CAAC,MAAM,UAAU,MAAM;AAC/B,UAAM,cAAc,YAAY,MAAM,UAAU,KAAK;AACrD,UAAM,iBAAkB,YAAyC,UAAU,kBAAkB,GAAG;AAEhG,WAAO,kBAAkB,WAAW,iBAChC,eAAe,OACX,OAAO,CAAC,MAAM,UAAU,KAAK,EAAE,QAAQ,eAAe,SAAS,EAAE,IAAI,CAAC,EACvE,IAAI,CAAC,OAA2D;AAAA,MAC/D;AAAA,MACA,YAAY,UAAU,IAAI,EAAE,OAAO;AAAA,IACrC,EAAE,IACJ,CAAC;AAAA,EACP,CAAC,EACA,OAAO,CAAC,gBAAgB,eAAe,IAAI;AAChD;AAEA,SAAS,eAAe,SAAsE;AAC5F,SAAO,QAAQ,OAAO,CAAC,YAAY,WAAW;AAC5C,UAAM,CAAC,GAAG,SAAS,MAAM,IAAI,OAAO,KAAK,MAAM,GAAG;AAClD,UAAM,iBAAiB,WAAW,IAAI,OAAO,KAAK,oBAAI,IAAoB;AAC1E,mBAAe,IAAI,QAAQ,OAAO,UAAU;AAC5C,eAAW,IAAI,SAAS,cAAc;AACtC,WAAO;AAAA,EACT,GAAG,oBAAI,IAAiC,CAAC;AAC3C;AAEA,MAAO,sBAAoC,OAAO;AAAA;AAAA,EAEhD,MAAe,QAAQ,eAA6C;AAClE,UAAM,qBAAqB,8CAA8C,aAAa;AACtF,UAAM,WAAW,eAAe,kBAAkB;AAClD,aAAS,QAAQ,CAAC,SAAS,YAAY;AACrC,YAAM,QAAQ,cAAc,QAAQ,UAAU,CAAC,WAAW,OAAO,aAAa,GAAG,OAAO,KAAK;AAC7F,UAAI,SAAS,GAAG;AACd,sBAAc,QAAQ,KAAK,IAAI,IAAI;AAAA,UACjC;AAAA,UACA;AAAA,UACA,cAAc,QAAQ,KAAK;AAAA,UAC3B;AAAA,QACF,EAAE,QAAQ;AAAA,MACZ;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAIA,IAAa,OAAe;AAC1B,WAAO,YAAY;AAAA,EACrB;AACF;",
  "names": []
}
